{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/utils/canvasUtils.js"],"sourcesContent":["// Get the correct coordinates based on canvas scaling\nexport const getCoordinates = (e, canvas) => {\n  const rect = canvas.getBoundingClientRect();\n  \n  // Calculate the scaling factor between the internal canvas size and displayed size\n  const scaleX = canvas.width / rect.width;\n  const scaleY = canvas.height / rect.height;\n  \n  // Apply the scaling to get accurate coordinates\n  return {\n    x: (e.nativeEvent.offsetX || (e.nativeEvent.touches?.[0]?.clientX - rect.left)) * scaleX,\n    y: (e.nativeEvent.offsetY || (e.nativeEvent.touches?.[0]?.clientY - rect.top)) * scaleY\n  };\n};\n\n// Initialize canvas with white background\nexport const initializeCanvas = (canvas) => {\n  const ctx = canvas.getContext(\"2d\");\n  \n  // Fill canvas with white background\n  ctx.fillStyle = \"#FFFFFF\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n};\n\n// Draw the background image to the canvas\nexport const drawImageToCanvas = (canvas, backgroundImage) => {\n  if (!canvas || !backgroundImage) return;\n  \n  const ctx = canvas.getContext(\"2d\");\n  \n  // Fill with white background first\n  ctx.fillStyle = \"#FFFFFF\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  \n  // Draw the background image\n  ctx.drawImage(\n    backgroundImage,\n    0, 0,\n    canvas.width, canvas.height\n  );\n};\n\n// Draw bezier curve\nexport const drawBezierCurve = (canvas, points) => {\n  const ctx = canvas.getContext('2d');\n  \n  if (!points || points.length < 2) {\n    console.error('Need at least 2 points to draw a path');\n    return;\n  }\n  \n  ctx.beginPath();\n  ctx.strokeStyle = '#000000';\n  ctx.lineWidth = 4;\n  \n  // Start at the first anchor point\n  ctx.moveTo(points[0].x, points[0].y);\n  \n  // For each pair of anchor points (and their control points)\n  for (let i = 0; i < points.length - 1; i++) {\n    const current = points[i];\n    const next = points[i + 1];\n    \n    if (current.handleOut && next.handleIn) {\n      // If both points have handles, draw a cubic bezier\n      ctx.bezierCurveTo(\n        current.x + (current.handleOut?.x || 0), current.y + (current.handleOut?.y || 0),\n        next.x + (next.handleIn?.x || 0), next.y + (next.handleIn?.y || 0),\n        next.x, next.y\n      );\n    } else {\n      // If no handles, draw a straight line\n      ctx.lineTo(next.x, next.y);\n    }\n  }\n  \n  ctx.stroke();\n};\n\n// Draw bezier guides (control points and lines)\nexport const drawBezierGuides = (ctx, points) => {\n  if (!points || points.length === 0) return;\n  \n  // Draw the path itself first (as a light preview)\n  ctx.save();\n  ctx.globalAlpha = 0.3;\n  ctx.strokeStyle = '#888888';\n  ctx.lineWidth = 1.5;\n  \n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  \n  // For each pair of anchor points (and their control points)\n  for (let i = 0; i < points.length - 1; i++) {\n    const current = points[i];\n    const next = points[i + 1];\n    \n    if (current.handleOut && next.handleIn) {\n      // If both points have handles, draw a cubic bezier\n      ctx.bezierCurveTo(\n        current.x + (current.handleOut?.x || 0), current.y + (current.handleOut?.y || 0),\n        next.x + (next.handleIn?.x || 0), next.y + (next.handleIn?.y || 0),\n        next.x, next.y\n      );\n    } else {\n      // If no handles, draw a straight line\n      ctx.lineTo(next.x, next.y);\n    }\n  }\n  \n  ctx.stroke();\n  ctx.restore();\n  \n  // Draw guide lines between anchor points and their handles\n  ctx.strokeStyle = 'rgba(100, 100, 255, 0.5)';\n  ctx.lineWidth = 1;\n  \n  for (const point of points) {\n    // Draw line from anchor to in-handle if it exists\n    if (point.handleIn) {\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(point.x + point.handleIn.x, point.y + point.handleIn.y);\n      ctx.stroke();\n    }\n    \n    // Draw line from anchor to out-handle if it exists\n    if (point.handleOut) {\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(point.x + point.handleOut.x, point.y + point.handleOut.y);\n      ctx.stroke();\n    }\n  }\n  \n  // Draw anchor points (main points of the path)\n  for (const point of points) {\n    // Draw the main anchor point\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.lineWidth = 1;\n    \n    ctx.beginPath();\n    ctx.arc(point.x, point.y, 5, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n    \n    // Draw the handle points if they exist\n    if (point.handleIn) {\n      ctx.fillStyle = 'rgba(100, 100, 255, 0.8)';\n      ctx.beginPath();\n      ctx.arc(point.x + point.handleIn.x, point.y + point.handleIn.y, 4, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    \n    if (point.handleOut) {\n      ctx.fillStyle = 'rgba(100, 100, 255, 0.8)';\n      ctx.beginPath();\n      ctx.arc(point.x + point.handleOut.x, point.y + point.handleOut.y, 4, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n};\n\n// Helper to create a new anchor point with handles\nexport const createAnchorPoint = (x, y, prevPoint = null) => {\n  // By default, create a point with no handles\n  const point = { x, y, handleIn: null, handleOut: null };\n  \n  // If there's a previous point, automatically add symmetric handles\n  if (prevPoint) {\n    // Calculate the default handle length (as a percentage of distance to previous point)\n    const dx = x - prevPoint.x;\n    const dy = y - prevPoint.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const handleLength = distance * 0.3; // 30% of distance between points\n    \n    // Create handles perpendicular to the line between points\n    // For a smooth curve, make the previous point's out handle opposite to this point's in handle\n    const angle = Math.atan2(dy, dx);\n    \n    // Add an out handle to the previous point (if it doesn't already have one)\n    if (!prevPoint.handleOut) {\n      prevPoint.handleOut = {\n        x: Math.cos(angle) * -handleLength,\n        y: Math.sin(angle) * -handleLength\n      };\n    }\n    \n    // Add an in handle to the current point\n    point.handleIn = {\n      x: Math.cos(angle) * -handleLength,\n      y: Math.sin(angle) * -handleLength\n    };\n  }\n  \n  return point;\n};\n\n// Helper to check if a point is near a handle\nexport const isNearHandle = (point, handleType, x, y, radius = 10) => {\n  if (!point || !point[handleType]) return false;\n  \n  const handleX = point.x + point[handleType].x;\n  const handleY = point.y + point[handleType].y;\n  \n  const dx = handleX - x;\n  const dy = handleY - y;\n  \n  return (dx * dx + dy * dy) <= radius * radius;\n};\n\n// Helper to update a handle position\nexport const updateHandle = (point, handleType, dx, dy, symmetric = true) => {\n  if (!point || !point[handleType]) return;\n  \n  // Update the target handle\n  point[handleType].x += dx;\n  point[handleType].y += dy;\n  \n  // If symmetric and the other handle exists, update it to be symmetrical\n  if (symmetric) {\n    const otherType = handleType === 'handleIn' ? 'handleOut' : 'handleIn';\n    \n    if (point[otherType]) {\n      point[otherType].x = -point[handleType].x;\n      point[otherType].y = -point[handleType].y;\n    }\n  }\n}; "],"names":[],"mappings":"AAAA,sDAAsD;;;;;;;;;;;AAC/C,MAAM,iBAAiB,CAAC,GAAG;IAChC,MAAM,OAAO,OAAO,qBAAqB;IAEzC,mFAAmF;IACnF,MAAM,SAAS,OAAO,KAAK,GAAG,KAAK,KAAK;IACxC,MAAM,SAAS,OAAO,MAAM,GAAG,KAAK,MAAM;IAE1C,gDAAgD;IAChD,OAAO;QACL,GAAG,CAAC,EAAE,WAAW,CAAC,OAAO,IAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,KAAK,IAAI,AAAC,IAAI;QAClF,GAAG,CAAC,EAAE,WAAW,CAAC,OAAO,IAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,KAAK,GAAG,AAAC,IAAI;IACnF;AACF;AAGO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,MAAM,OAAO,UAAU,CAAC;IAE9B,oCAAoC;IACpC,IAAI,SAAS,GAAG;IAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;AAChD;AAGO,MAAM,oBAAoB,CAAC,QAAQ;IACxC,IAAI,CAAC,UAAU,CAAC,iBAAiB;IAEjC,MAAM,MAAM,OAAO,UAAU,CAAC;IAE9B,mCAAmC;IACnC,IAAI,SAAS,GAAG;IAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;IAE9C,4BAA4B;IAC5B,IAAI,SAAS,CACX,iBACA,GAAG,GACH,OAAO,KAAK,EAAE,OAAO,MAAM;AAE/B;AAGO,MAAM,kBAAkB,CAAC,QAAQ;IACtC,MAAM,MAAM,OAAO,UAAU,CAAC;IAE9B,IAAI,CAAC,UAAU,OAAO,MAAM,GAAG,GAAG;QAChC,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,IAAI,SAAS;IACb,IAAI,WAAW,GAAG;IAClB,IAAI,SAAS,GAAG;IAEhB,kCAAkC;IAClC,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;IAEnC,4DAA4D;IAC5D,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,IAAK;QAC1C,MAAM,UAAU,MAAM,CAAC,EAAE;QACzB,MAAM,OAAO,MAAM,CAAC,IAAI,EAAE;QAE1B,IAAI,QAAQ,SAAS,IAAI,KAAK,QAAQ,EAAE;YACtC,mDAAmD;YACnD,IAAI,aAAa,CACf,QAAQ,CAAC,GAAG,CAAC,QAAQ,SAAS,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,SAAS,EAAE,KAAK,CAAC,GAC/E,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,KAAK,CAAC,GACjE,KAAK,CAAC,EAAE,KAAK,CAAC;QAElB,OAAO;YACL,sCAAsC;YACtC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QAC3B;IACF;IAEA,IAAI,MAAM;AACZ;AAGO,MAAM,mBAAmB,CAAC,KAAK;IACpC,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;IAEpC,kDAAkD;IAClD,IAAI,IAAI;IACR,IAAI,WAAW,GAAG;IAClB,IAAI,WAAW,GAAG;IAClB,IAAI,SAAS,GAAG;IAEhB,IAAI,SAAS;IACb,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;IAEnC,4DAA4D;IAC5D,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,IAAK;QAC1C,MAAM,UAAU,MAAM,CAAC,EAAE;QACzB,MAAM,OAAO,MAAM,CAAC,IAAI,EAAE;QAE1B,IAAI,QAAQ,SAAS,IAAI,KAAK,QAAQ,EAAE;YACtC,mDAAmD;YACnD,IAAI,aAAa,CACf,QAAQ,CAAC,GAAG,CAAC,QAAQ,SAAS,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,SAAS,EAAE,KAAK,CAAC,GAC/E,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,KAAK,CAAC,GACjE,KAAK,CAAC,EAAE,KAAK,CAAC;QAElB,OAAO;YACL,sCAAsC;YACtC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QAC3B;IACF;IAEA,IAAI,MAAM;IACV,IAAI,OAAO;IAEX,2DAA2D;IAC3D,IAAI,WAAW,GAAG;IAClB,IAAI,SAAS,GAAG;IAEhB,KAAK,MAAM,SAAS,OAAQ;QAC1B,kDAAkD;QAClD,IAAI,MAAM,QAAQ,EAAE;YAClB,IAAI,SAAS;YACb,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;YAC3B,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;YACjE,IAAI,MAAM;QACZ;QAEA,mDAAmD;QACnD,IAAI,MAAM,SAAS,EAAE;YACnB,IAAI,SAAS;YACb,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;YAC3B,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,MAAM,SAAS,CAAC,CAAC;YACnE,IAAI,MAAM;QACZ;IACF;IAEA,+CAA+C;IAC/C,KAAK,MAAM,SAAS,OAAQ;QAC1B,6BAA6B;QAC7B,IAAI,SAAS,GAAG;QAChB,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAG;QAEhB,IAAI,SAAS;QACb,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG;QAC1C,IAAI,IAAI;QACR,IAAI,MAAM;QAEV,uCAAuC;QACvC,IAAI,MAAM,QAAQ,EAAE;YAClB,IAAI,SAAS,GAAG;YAChB,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG;YAChF,IAAI,IAAI;QACV;QAEA,IAAI,MAAM,SAAS,EAAE;YACnB,IAAI,SAAS,GAAG;YAChB,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,MAAM,SAAS,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG;YAClF,IAAI,IAAI;QACV;IACF;AACF;AAGO,MAAM,oBAAoB,CAAC,GAAG,GAAG,YAAY,IAAI;IACtD,6CAA6C;IAC7C,MAAM,QAAQ;QAAE;QAAG;QAAG,UAAU;QAAM,WAAW;IAAK;IAEtD,mEAAmE;IACnE,IAAI,WAAW;QACb,sFAAsF;QACtF,MAAM,KAAK,IAAI,UAAU,CAAC;QAC1B,MAAM,KAAK,IAAI,UAAU,CAAC;QAC1B,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK;QAC1C,MAAM,eAAe,WAAW,KAAK,iCAAiC;QAEtE,0DAA0D;QAC1D,8FAA8F;QAC9F,MAAM,QAAQ,KAAK,KAAK,CAAC,IAAI;QAE7B,2EAA2E;QAC3E,IAAI,CAAC,UAAU,SAAS,EAAE;YACxB,UAAU,SAAS,GAAG;gBACpB,GAAG,KAAK,GAAG,CAAC,SAAS,CAAC;gBACtB,GAAG,KAAK,GAAG,CAAC,SAAS,CAAC;YACxB;QACF;QAEA,wCAAwC;QACxC,MAAM,QAAQ,GAAG;YACf,GAAG,KAAK,GAAG,CAAC,SAAS,CAAC;YACtB,GAAG,KAAK,GAAG,CAAC,SAAS,CAAC;QACxB;IACF;IAEA,OAAO;AACT;AAGO,MAAM,eAAe,CAAC,OAAO,YAAY,GAAG,GAAG,SAAS,EAAE;IAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO;IAEzC,MAAM,UAAU,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;IAC7C,MAAM,UAAU,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;IAE7C,MAAM,KAAK,UAAU;IACrB,MAAM,KAAK,UAAU;IAErB,OAAO,AAAC,KAAK,KAAK,KAAK,MAAO,SAAS;AACzC;AAGO,MAAM,eAAe,CAAC,OAAO,YAAY,IAAI,IAAI,YAAY,IAAI;IACtE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE;IAElC,2BAA2B;IAC3B,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI;IACvB,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI;IAEvB,wEAAwE;IACxE,IAAI,WAAW;QACb,MAAM,YAAY,eAAe,aAAa,cAAc;QAE5D,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACzC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3C;IACF;AACF","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/ToolBar.js"],"sourcesContent":["import { Pencil, Eraser, Type, Undo, Trash2, PenLine, Upload } from 'lucide-react';\nimport { PenTool } from 'lucide-react';\nimport { Undo2 } from 'lucide-react';\nimport { useState } from 'react';\n\nconst ToolBar = ({ \n  currentTool, \n  setCurrentTool, \n  handleUndo, \n  clearCanvas, \n  orientation = 'horizontal',\n  onImageUpload\n}) => {\n  const mainTools = [\n    { id: 'pencil', icon: Pencil, label: 'Pencil' },\n    { id: 'pen', icon: PenTool, label: 'Pen' },\n    { id: 'eraser', icon: Eraser, label: 'Eraser' },\n    { id: 'text', icon: Type, label: 'Text' }\n  ];\n\n  const actions = [\n    { id: 'upload', icon: Upload, label: 'Upload Image', onClick: () => {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.onchange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n          const reader = new FileReader();\n          reader.onload = (event) => {\n            onImageUpload(event.target.result);\n          };\n          reader.readAsDataURL(file);\n        }\n      };\n      input.click();\n    }},\n    { id: 'undo', icon: Undo2, label: 'Undo', onClick: handleUndo },\n    { id: 'clear', icon: Trash2, label: 'Clear', onClick: clearCanvas }\n  ];\n\n  const containerClasses = orientation === 'vertical' \n    ? 'flex flex-col gap-2 bg-white rounded-xl shadow-soft p-2 border border-gray-200'\n    : 'flex gap-2 bg-white rounded-xl shadow-soft p-2 border border-gray-200';\n\n  return (\n    <div className={containerClasses}>\n      {mainTools.map((tool) => (\n        <div key={tool.id} className=\"relative\">\n          <button\n            onClick={() => setCurrentTool(tool.id)}\n            className={`p-2 rounded-lg transition-colors ${\n              currentTool === tool.id\n                ? 'bg-gray-100 text-gray-900'\n                : 'text-gray-600 hover:bg-gray-50'\n            }`}\n            title={tool.label}\n          >\n            <tool.icon className=\"w-5 h-5\" />\n          </button>\n        </div>\n      ))}\n      \n      {orientation === 'vertical' && <div className=\"h-px bg-gray-200 my-2\" />}\n      {orientation === 'horizontal' && <div className=\"w-px bg-gray-200 mx-2\" />}\n      \n      {actions.map((action) => (\n        <button\n          key={action.id}\n          onClick={action.onClick}\n          className=\"p-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-colors\"\n          title={action.label}\n        >\n          <action.icon className=\"w-5 h-5\" />\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ToolBar; "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,UAAU,CAAC,EACf,WAAW,EACX,cAAc,EACd,UAAU,EACV,WAAW,EACX,cAAc,YAAY,EAC1B,aAAa,EACd;IACC,MAAM,YAAY;QAChB;YAAE,IAAI;YAAU,MAAM,+LAAA,CAAA,SAAM;YAAE,OAAO;QAAS;QAC9C;YAAE,IAAI;YAAO,MAAM,qMAAA,CAAA,UAAO;YAAE,OAAO;QAAM;QACzC;YAAE,IAAI;YAAU,MAAM,+LAAA,CAAA,SAAM;YAAE,OAAO;QAAS;QAC9C;YAAE,IAAI;YAAQ,MAAM,2LAAA,CAAA,OAAI;YAAE,OAAO;QAAO;KACzC;IAED,MAAM,UAAU;QACd;YAAE,IAAI;YAAU,MAAM,+LAAA,CAAA,SAAM;YAAE,OAAO;YAAgB,SAAS;gBAC5D,MAAM,QAAQ,SAAS,aAAa,CAAC;gBACrC,MAAM,IAAI,GAAG;gBACb,MAAM,MAAM,GAAG;gBACf,MAAM,QAAQ,GAAG,CAAC;oBAChB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;oBAC9B,IAAI,MAAM;wBACR,MAAM,SAAS,IAAI;wBACnB,OAAO,MAAM,GAAG,CAAC;4BACf,cAAc,MAAM,MAAM,CAAC,MAAM;wBACnC;wBACA,OAAO,aAAa,CAAC;oBACvB;gBACF;gBACA,MAAM,KAAK;YACb;QAAC;QACD;YAAE,IAAI;YAAQ,MAAM,iMAAA,CAAA,QAAK;YAAE,OAAO;YAAQ,SAAS;QAAW;QAC9D;YAAE,IAAI;YAAS,MAAM,mMAAA,CAAA,SAAM;YAAE,OAAO;YAAS,SAAS;QAAY;KACnE;IAED,MAAM,mBAAmB,gBAAgB,aACrC,mFACA;IAEJ,qBACE,qKAAC;QAAI,WAAW;;YACb,UAAU,GAAG,CAAC,CAAC,qBACd,qKAAC;oBAAkB,WAAU;8BAC3B,cAAA,qKAAC;wBACC,SAAS,IAAM,eAAe,KAAK,EAAE;wBACrC,WAAW,CAAC,iCAAiC,EAC3C,gBAAgB,KAAK,EAAE,GACnB,8BACA,kCACJ;wBACF,OAAO,KAAK,KAAK;kCAEjB,cAAA,qKAAC,KAAK,IAAI;4BAAC,WAAU;;;;;;;;;;;mBAVf,KAAK,EAAE;;;;;YAelB,gBAAgB,4BAAc,qKAAC;gBAAI,WAAU;;;;;;YAC7C,gBAAgB,8BAAgB,qKAAC;gBAAI,WAAU;;;;;;YAE/C,QAAQ,GAAG,CAAC,CAAC,uBACZ,qKAAC;oBAEC,SAAS,OAAO,OAAO;oBACvB,WAAU;oBACV,OAAO,OAAO,KAAK;8BAEnB,cAAA,qKAAC,OAAO,IAAI;wBAAC,WAAU;;;;;;mBALlB,OAAO,EAAE;;;;;;;;;;;AAUxB;uCAEe","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/Canvas.js"],"sourcesContent":["import { useRef, useEffect, useState, forwardRef } from 'react';\nimport { \n  getCoordinates, \n  drawBezierCurve, \n  drawBezierGuides, \n  createAnchorPoint,\n  isNearHandle,\n  updateHandle\n} from './utils/canvasUtils';\nimport { PencilLine, Upload } from 'lucide-react';\nimport ToolBar from './ToolBar';\n\nconst Canvas = forwardRef(({\n  canvasRef,\n  currentTool,\n  isDrawing,\n  startDrawing,\n  draw,\n  stopDrawing,\n  handleCanvasClick,\n  handlePenClick,\n  handleGeneration,\n  tempPoints,\n  setTempPoints,\n  handleUndo,\n  clearCanvas,\n  setCurrentTool,\n  currentDimension,\n  onImageUpload,\n  onGenerate,\n  isGenerating,\n  currentColor,\n  currentWidth,\n  handleStrokeWidth\n}, ref) => {\n  const [showBezierGuides, setShowBezierGuides] = useState(true);\n  const [activePoint, setActivePoint] = useState(-1);\n  const [activeHandle, setActiveHandle] = useState(null);\n  const [symmetric, setSymmetric] = useState(true);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n  const [hasDrawing, setHasDrawing] = useState(false);\n  const [strokeCount, setStrokeCount] = useState(0);\n  const fileInputRef = useRef(null);\n  const [shapeStartPos, setShapeStartPos] = useState(null);\n  const [previewCanvas, setPreviewCanvas] = useState(null);\n\n  // Add touch event prevention function\n  useEffect(() => {\n    // Function to prevent default touch behavior on canvas\n    const preventTouchDefault = (e) => {\n      if (isDrawing) {\n        e.preventDefault();\n      }\n    };\n\n    // Add event listener when component mounts\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.addEventListener('touchstart', preventTouchDefault, { passive: false });\n      canvas.addEventListener('touchmove', preventTouchDefault, { passive: false });\n    }\n\n    // Remove event listener when component unmounts\n    return () => {\n      if (canvas) {\n        canvas.removeEventListener('touchstart', preventTouchDefault);\n        canvas.removeEventListener('touchmove', preventTouchDefault);\n      }\n    };\n  }, [isDrawing, canvasRef]);\n\n  // Add debugging info to console\n  useEffect(() => {\n    console.log('Canvas tool changed or isDrawing changed:', { currentTool, isDrawing });\n  }, [currentTool, isDrawing]);\n\n  // Redraw bezier guides and control points when tempPoints change\n  useEffect(() => {\n    if (currentTool === 'pen' && tempPoints.length > 0 && showBezierGuides) {\n      redrawBezierGuides();\n    }\n  }, [tempPoints, showBezierGuides, currentTool]);\n\n  // Add useEffect to check if canvas has content\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Check if canvas has any non-white pixels (i.e., has a drawing)\n    const hasNonWhitePixels = Array.from(imageData.data).some((pixel, index) => {\n      // Check only RGB values (skip alpha)\n      return index % 4 !== 3 && pixel !== 255;\n    });\n    \n    setHasDrawing(hasNonWhitePixels);\n  }, [canvasRef]);\n\n  const handleKeyDown = (e) => {\n    // Add keyboard accessibility\n    if (e.key === 'Enter' || e.key === ' ') {\n      handleCanvasClick(e);\n    }\n    \n    // Toggle symmetric handles with Shift key\n    if (e.key === 'Shift') {\n      setSymmetric(!symmetric);\n    }\n  };\n\n  // Draw bezier control points and guide lines\n  const redrawBezierGuides = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    // Get the canvas context\n    const ctx = canvas.getContext('2d');\n    \n    // Save the current canvas state to redraw later\n    const canvasImage = new Image();\n    canvasImage.src = canvas.toDataURL();\n    \n    canvasImage.onload = () => {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Redraw the canvas content\n      ctx.drawImage(canvasImage, 0, 0);\n      \n      // Draw the control points and guide lines\n      drawBezierGuides(ctx, tempPoints);\n    };\n  };\n\n  // Function to draw a star shape\n  const drawStar = (ctx, x, y, radius, points = 5) => {\n    ctx.beginPath();\n    for (let i = 0; i <= points * 2; i++) {\n      const r = i % 2 === 0 ? radius : radius / 2;\n      const angle = (i * Math.PI) / points;\n      const xPos = x + r * Math.sin(angle);\n      const yPos = y + r * Math.cos(angle);\n      if (i === 0) ctx.moveTo(xPos, yPos);\n      else ctx.lineTo(xPos, yPos);\n    }\n    ctx.closePath();\n  };\n\n  // Function to draw shapes\n  const drawShape = (ctx, startPos, endPos, shape, isPreview = false) => {\n    if (!startPos || !endPos) return;\n\n    const width = endPos.x - startPos.x;\n    const height = endPos.y - startPos.y;\n    const radius = Math.sqrt(width * width + height * height) / 2;\n\n    ctx.strokeStyle = currentColor || '#000000';\n    ctx.fillStyle = currentColor || '#000000';\n    ctx.lineWidth = currentWidth || 2;\n\n    switch (shape) {\n      case 'rect':\n        if (isPreview) {\n          ctx.strokeRect(startPos.x, startPos.y, width, height);\n        } else {\n          ctx.fillRect(startPos.x, startPos.y, width, height);\n        }\n        break;\n      case 'circle':\n        ctx.beginPath();\n        ctx.ellipse(\n          startPos.x + width / 2,\n          startPos.y + height / 2,\n          Math.abs(width / 2),\n          Math.abs(height / 2),\n          0,\n          0,\n          2 * Math.PI\n        );\n        if (isPreview) {\n          ctx.stroke();\n        } else {\n          ctx.fill();\n        }\n        break;\n      case 'line':\n        ctx.beginPath();\n        ctx.lineCap = 'round';\n        ctx.lineWidth = currentWidth * 2 || 4; // Make lines thicker\n        ctx.moveTo(startPos.x, startPos.y);\n        ctx.lineTo(endPos.x, endPos.y);\n        ctx.stroke();\n        break;\n      case 'star':\n        const centerX = startPos.x + width / 2;\n        const centerY = startPos.y + height / 2;\n        drawStar(ctx, centerX, centerY, radius);\n        if (isPreview) {\n          ctx.stroke();\n        } else {\n          ctx.fill();\n        }\n        break;\n    }\n  };\n\n  // Modified startDrawing handler\n  const handleStartDrawing = (e) => {\n    console.log('Canvas onMouseDown', { currentTool, isDrawing });\n    \n    if (currentTool === 'pen') {\n      if (!checkForPointOrHandle(e)) {\n        handlePenToolClick(e);\n      }\n      return;\n    }\n    \n    const { x, y } = getCoordinates(e, canvasRef.current);\n    \n    if (['rect', 'circle', 'line', 'star'].includes(currentTool)) {\n      setShapeStartPos({ x, y });\n      \n      // Create preview canvas if it doesn't exist\n      if (!previewCanvas) {\n        const canvas = document.createElement('canvas');\n        canvas.width = canvasRef.current.width;\n        canvas.height = canvasRef.current.height;\n        setPreviewCanvas(canvas);\n      }\n    }\n    \n    startDrawing(e);\n    setHasDrawing(true);\n  };\n\n  // Modified draw handler\n  const handleDraw = (e) => {\n    if (currentTool === 'pen' && handleBezierMouseMove(e)) {\n      return;\n    }\n\n    if (!isDrawing) return;\n    \n    const canvas = canvasRef.current;\n    const { x, y } = getCoordinates(e, canvas);\n    \n    draw(e);\n  };\n\n  // Modified stopDrawing handler\n  const handleStopDrawing = (e) => {\n    console.log('handleStopDrawing called', { \n      eventType: e?.type, \n      currentTool, \n      isDrawing, \n      activePoint, \n      activeHandle\n    });\n    \n    // If we're using the pen tool with active point or handle\n    if (currentTool === 'pen') {\n      // If we were dragging a handle, just release it\n      if (activeHandle) {\n        setActiveHandle(null);\n        return;\n      }\n      \n      // If we were dragging an anchor point, just release it\n      if (activePoint !== -1) {\n        setActivePoint(-1);\n        return;\n      }\n    }\n\n    stopDrawing(e);\n\n    // If using the pencil tool and we've just finished a drag, trigger generation\n    if (currentTool === 'pencil' && isDrawing) {\n      console.log(`${currentTool} tool condition met, will try to trigger generation`);\n      \n      // Small delay to ensure the drawing is complete\n      setTimeout(() => {\n        console.log('Attempting to call handleGeneration after timeout');\n        if (typeof handleGeneration === 'function') {\n          console.log('Calling handleGeneration function');\n          handleGeneration();\n        } else {\n          console.error('handleGeneration is not a function:', handleGeneration);\n        }\n      }, 100);\n    } else {\n      console.log('Generation not triggered because:', { \n        isPencilTool: currentTool === 'pencil',\n        wasDrawing: isDrawing \n      });\n    }\n  };\n\n  // Check if we clicked on an existing point or handle\n  const checkForPointOrHandle = (e) => {\n    if (currentTool !== 'pen' || !showBezierGuides || tempPoints.length === 0) {\n      return false;\n    }\n    \n    const canvas = canvasRef.current;\n    const { x, y } = getCoordinates(e, canvas);\n    setLastMousePos({ x, y });\n    \n    // Check if we clicked on a handle\n    for (let i = 0; i < tempPoints.length; i++) {\n      const point = tempPoints[i];\n      \n      // Check for handleIn\n      if (isNearHandle(point, 'handleIn', x, y)) {\n        setActivePoint(i);\n        setActiveHandle('handleIn');\n        return true;\n      }\n      \n      // Check for handleOut\n      if (isNearHandle(point, 'handleOut', x, y)) {\n        setActivePoint(i);\n        setActiveHandle('handleOut');\n        return true;\n      }\n      \n      // Check for the anchor point itself\n      const distance = Math.sqrt((point.x - x) ** 2 + (point.y - y) ** 2);\n      if (distance <= 10) {\n        setActivePoint(i);\n        setActiveHandle(null);\n        return true;\n      }\n    }\n    \n    return false;\n  };\n  \n  // Handle mouse move for bezier control point or handle dragging\n  const handleBezierMouseMove = (e) => {\n    if (currentTool !== 'pen') {\n      return false;\n    }\n    \n    const canvas = canvasRef.current;\n    const { x, y } = getCoordinates(e, canvas);\n    const dx = x - lastMousePos.x;\n    const dy = y - lastMousePos.y;\n    \n    // If we're dragging a handle\n    if (activePoint !== -1 && activeHandle) {\n      const newPoints = [...tempPoints];\n      updateHandle(newPoints[activePoint], activeHandle, dx, dy, symmetric);\n      setTempPoints(newPoints);\n      setLastMousePos({ x, y });\n      return true;\n    }\n    \n    // If we're dragging an anchor point\n    if (activePoint !== -1) {\n      const newPoints = [...tempPoints];\n      newPoints[activePoint].x += dx;\n      newPoints[activePoint].y += dy;\n      \n      // If this point has handles, move them with the point\n      if (newPoints[activePoint].handleIn) {\n        // No need to change the handle's offset, just move with the point\n      }\n      \n      if (newPoints[activePoint].handleOut) {\n        // No need to change the handle's offset, just move with the point\n      }\n      \n      setTempPoints(newPoints);\n      setLastMousePos({ x, y });\n      return true;\n    }\n    \n    return false;\n  };\n\n  // Handle clicks for bezier curve tool\n  const handlePenToolClick = (e) => {\n    const canvas = canvasRef.current;\n    const { x, y } = getCoordinates(e, canvas);\n    \n    // Add a new point\n    if (tempPoints.length === 0) {\n      // First point has no handles initially\n      const newPoint = { x, y, handleIn: null, handleOut: null };\n      setTempPoints([newPoint]);\n    } else {\n      // Create a new point with handles relative to the last point\n      const newPoint = createAnchorPoint(x, y, tempPoints[tempPoints.length - 1]);\n      setTempPoints([...tempPoints, newPoint]);\n    }\n    \n    // Always show guides when adding points\n    setShowBezierGuides(true);\n  };\n  \n  // Toggle bezier guide visibility\n  const toggleBezierGuides = () => {\n    setShowBezierGuides(!showBezierGuides);\n    if (showBezierGuides) {\n      redrawBezierGuides();\n    }\n  };\n\n  // Draw the final bezier curve and clear control points\n  const finalizeBezierCurve = () => {\n    if (tempPoints.length < 2) {\n      // Need at least 2 points for a path\n      console.log('Need at least 2 control points to draw a path');\n      return;\n    }\n    \n    const canvas = canvasRef.current;\n    \n    // Draw the actual bezier curve\n    drawBezierCurve(canvas, tempPoints);\n    \n    // Hide guides and reset control points\n    setShowBezierGuides(false);\n    setTempPoints([]);\n    \n    // Trigger generation\n    setTimeout(() => {\n      if (typeof handleGeneration === 'function') {\n        handleGeneration();\n      }\n    }, 100);\n  };\n\n  // Add control point to segment\n  const addControlPoint = (e) => {\n    if (currentTool !== 'pen' || tempPoints.length < 2) return;\n    \n    const canvas = canvasRef.current;\n    const { x, y } = getCoordinates(e, canvas);\n    \n    // Find the closest segment to add a point to\n    let closestDistance = Number.POSITIVE_INFINITY;\n    let insertIndex = -1;\n    \n    for (let i = 0; i < tempPoints.length - 1; i++) {\n      const p1 = tempPoints[i];\n      const p2 = tempPoints[i + 1];\n      \n      // Calculate distance from click to line between points\n      // This is a simplified distance calculation for demo purposes\n      const lineLength = Math.sqrt((p2.x - p1.x) ** 2 + (p2.y - p1.y) ** 2);\n      if (lineLength === 0) continue;\n      \n      // Project point onto line\n      const t = ((x - p1.x) * (p2.x - p1.x) + (y - p1.y) * (p2.y - p1.y)) / (lineLength * lineLength);\n      \n      // If projection is outside the line segment, skip\n      if (t < 0 || t > 1) continue;\n      \n      // Calculate closest point on line\n      const closestX = p1.x + t * (p2.x - p1.x);\n      const closestY = p1.y + t * (p2.y - p1.y);\n      \n      // Calculate distance to closest point\n      const distance = Math.sqrt((x - closestX) ** 2 + (y - closestY) ** 2);\n      \n      if (distance < closestDistance && distance < 20) {\n        closestDistance = distance;\n        insertIndex = i + 1;\n      }\n    }\n    \n    if (insertIndex > 0) {\n      // Create a new array with the new point inserted\n      const newPoints = [...tempPoints];\n      const prevPoint = newPoints[insertIndex - 1];\n      const nextPoint = newPoints[insertIndex];\n      \n      // Create a new point at the click position with automatically calculated handles\n      const newPoint = { \n        x, \n        y,\n        // Calculate handles based on the positions of adjacent points\n        handleIn: { \n          x: (prevPoint.x - x) * 0.25, \n          y: (prevPoint.y - y) * 0.25 \n        },\n        handleOut: { \n          x: (nextPoint.x - x) * 0.25, \n          y: (nextPoint.y - y) * 0.25 \n        }\n      };\n      \n      // Insert the new point\n      newPoints.splice(insertIndex, 0, newPoint);\n      setTempPoints(newPoints);\n    }\n  };\n\n  // Add function to handle image upload\n  const handleImageUpload = (imageDataUrl) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    img.onload = () => {\n      // Clear the canvas\n      ctx.fillStyle = '#FFFFFF';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculate dimensions to maintain aspect ratio and fit within canvas\n      const scale = Math.min(\n        canvas.width / img.width,\n        canvas.height / img.height\n      );\n      const x = (canvas.width - img.width * scale) / 2;\n      const y = (canvas.height - img.height * scale) / 2;\n\n      // Draw the image centered and scaled\n      ctx.drawImage(\n        img,\n        x, y,\n        img.width * scale,\n        img.height * scale\n      );\n\n      // Trigger generation with the uploaded image\n      setTimeout(() => {\n        if (typeof handleGeneration === 'function') {\n          handleGeneration();\n        }\n      }, 100);\n    };\n\n    img.src = imageDataUrl;\n  };\n\n  const handleGenerate = () => {\n    const canvas = canvasRef.current;\n    const imageData = canvas.toDataURL('image/png');\n    onGenerate(imageData);\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        \n        // Clear canvas\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        \n        // Calculate dimensions to maintain aspect ratio\n        const scale = Math.min(\n          canvas.width / img.width,\n          canvas.height / img.height\n        );\n        const x = (canvas.width - img.width * scale) / 2;\n        const y = (canvas.height - img.height * scale) / 2;\n        \n        // Draw image\n        ctx.drawImage(\n          img,\n          x,\n          y,\n          img.width * scale,\n          img.height * scale\n        );\n        \n        // Process the uploaded image\n        const imageData = canvas.toDataURL('image/png');\n        onImageUpload(imageData);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4 w-full\">\n      <div className=\"flex gap-4\">\n        <div className=\"flex-shrink-0\">\n          <ToolBar\n            currentTool={currentTool}\n            setCurrentTool={setCurrentTool}\n            handleUndo={handleUndo}\n            clearCanvas={clearCanvas}\n            orientation=\"vertical\"\n            onImageUpload={handleImageUpload}\n            currentWidth={currentWidth}\n            setStrokeWidth={handleStrokeWidth}\n          />\n        </div>\n\n        <div className=\"relative w-full flex justify-center\">\n          {currentTool === 'pen' && tempPoints.length > 0 && (\n            <button\n              onClick={finalizeBezierCurve}\n              className=\"absolute top-4 right-4 z-10 bg-gray-200 text-gray-700 rounded-full px-4 py-2 flex items-center hover:bg-gray-300 transition-colors\"\n            >\n              <span className=\"mr-2 text-sm font-medium\">Draw Curve</span>\n              <PencilLine className=\"w-4 h-4\" />\n            </button>\n          )}\n\n          <canvas\n            ref={canvasRef}\n            width={currentDimension.width}\n            height={currentDimension.height}\n            className=\"border border-gray-300 bg-white rounded-xl shadow-soft\"\n            style={{\n              aspectRatio: `${currentDimension.width} / ${currentDimension.height}`,\n              maxWidth: '100%',\n              maxHeight: '800px',\n              width: '100%',\n              height: 'auto',\n              touchAction: 'none'\n            }}\n            onMouseDown={handleStartDrawing}\n            onMouseMove={handleDraw}\n            onMouseUp={handleStopDrawing}\n            onMouseLeave={handleStopDrawing}\n            onTouchStart={handleStartDrawing}\n            onTouchMove={handleDraw}\n            onTouchEnd={handleStopDrawing}\n            onClick={handleCanvasClick}\n            onKeyDown={handleKeyDown}\n            tabIndex=\"0\"\n            aria-label=\"Drawing canvas\"\n          />\n          \n          {/* Draw here placeholder - only show when canvas is empty */}\n          {!hasDrawing && (\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\n              <PencilLine className=\"w-10 h-10 text-gray-300 mb-2\" />\n              <p className=\"text-gray-500 text-lg font-medium\">Draw here</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nCanvas.displayName = 'Canvas';\n\nexport default Canvas; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/ActionBar.js"],"sourcesContent":["import { Download, RefreshCw, History } from 'lucide-react';\n\nconst ActionBar = ({ handleSaveImage, handleRegenerate, onOpenHistory }) => {\n  return (\n    <div className=\"flex gap-2 bg-white rounded-xl shadow-soft p-2 border border-gray-200\">\n      <button\n        type=\"button\"\n        onClick={handleSaveImage}\n        className=\"p-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-colors\"\n        aria-label=\"Save Image\"\n      >\n        <Download className=\"w-5 h-5\" />\n      </button>\n      \n      <div className=\"w-px bg-gray-200 mx-1\" />\n      \n      <button\n        type=\"button\"\n        onClick={handleRegenerate}\n        className=\"p-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-colors\"\n        aria-label=\"Regenerate\"\n      >\n        <RefreshCw className=\"w-5 h-5\" />\n      </button>\n\n      <div className=\"w-px bg-gray-200 mx-1\" />\n      \n      <button\n        type=\"button\"\n        onClick={onOpenHistory}\n        className=\"p-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-colors\"\n        aria-label=\"View History\"\n      >\n        <History className=\"w-5 h-5\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ActionBar; "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;;AAEA,MAAM,YAAY,CAAC,EAAE,eAAe,EAAE,gBAAgB,EAAE,aAAa,EAAE;IACrE,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBACC,MAAK;gBACL,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,qKAAC,mMAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAGtB,qKAAC;gBAAI,WAAU;;;;;;0BAEf,qKAAC;gBACC,MAAK;gBACL,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,qKAAC,yMAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;;;;;;0BAGvB,qKAAC;gBAAI,WAAU;;;;;;0BAEf,qKAAC;gBACC,MAAK;gBACL,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,qKAAC,iMAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI3B;uCAEe","debugId":null}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/ImageRefiner.js"],"sourcesContent":["import { useState } from 'react';\nimport { Send, RotateCw, Maximize, Wand2 } from 'lucide-react';\n\nconst REFINEMENT_SUGGESTIONS = [\n  { icon: RotateCw, label: 'Rotate', prompt: 'Rotate the image' },\n  { icon: Maximize, label: 'Scale', prompt: 'Make it bigger' },\n  { icon: Wand2, label: 'Enhance', prompt: 'Enhance the details' },\n];\n\nconst ImageRefiner = ({ \n  onRefine,\n  isLoading,\n  hasGeneratedContent\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n    \n    onRefine(inputValue);\n    setInputValue('');\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    onRefine(suggestion.prompt);\n  };\n\n  if (!hasGeneratedContent) return null;\n\n  return (\n    <div className=\"w-full mt-4 space-y-4\">\n      {/* Refinement suggestions */}\n      <div className=\"flex flex-wrap gap-2\">\n        {REFINEMENT_SUGGESTIONS.map((suggestion) => (\n          <button\n            key={suggestion.label}\n            onClick={() => handleSuggestionClick(suggestion)}\n            disabled={isLoading}\n            className=\"flex items-center gap-2 px-3 py-1.5 bg-white rounded-full border border-gray-200 text-sm text-gray-600 hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <suggestion.icon className=\"w-4 h-4\" />\n            <span>{suggestion.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Chat input */}\n      <form onSubmit={handleSubmit} className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Type to refine the image...\"\n          disabled={isLoading}\n          className=\"flex-1 px-4 py-2 bg-white border border-gray-200 rounded-xl text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-400 disabled:opacity-50 disabled:cursor-not-allowed\"\n        />\n        <button\n          type=\"submit\"\n          disabled={isLoading || !inputValue.trim()}\n          className=\"p-2 bg-gray-900 text-white rounded-xl hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <Send className=\"w-5 h-5\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageRefiner; "],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;;;;AAEA,MAAM,yBAAyB;IAC7B;QAAE,MAAM,uMAAA,CAAA,WAAQ;QAAE,OAAO;QAAU,QAAQ;IAAmB;IAC9D;QAAE,MAAM,mMAAA,CAAA,WAAQ;QAAE,OAAO;QAAS,QAAQ;IAAiB;IAC3D;QAAE,MAAM,wMAAA,CAAA,QAAK;QAAE,OAAO;QAAW,QAAQ;IAAsB;CAChE;AAED,MAAM,eAAe,CAAC,EACpB,QAAQ,EACR,SAAS,EACT,mBAAmB,EACpB;IACC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,WAAW,IAAI,IAAI;QAExB,SAAS;QACT,cAAc;IAChB;IAEA,MAAM,wBAAwB,CAAC;QAC7B,SAAS,WAAW,MAAM;IAC5B;IAEA,IAAI,CAAC,qBAAqB,OAAO;IAEjC,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAI,WAAU;0BACZ,uBAAuB,GAAG,CAAC,CAAC,2BAC3B,qKAAC;wBAEC,SAAS,IAAM,sBAAsB;wBACrC,UAAU;wBACV,WAAU;;0CAEV,qKAAC,WAAW,IAAI;gCAAC,WAAU;;;;;;0CAC3B,qKAAC;0CAAM,WAAW,KAAK;;;;;;;uBANlB,WAAW,KAAK;;;;;;;;;;0BAY3B,qKAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,qKAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wBAC7C,aAAY;wBACZ,UAAU;wBACV,WAAU;;;;;;kCAEZ,qKAAC;wBACC,MAAK;wBACL,UAAU,aAAa,CAAC,WAAW,IAAI;wBACvC,WAAU;kCAEV,cAAA,qKAAC,2LAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAK1B;uCAEe","debugId":null}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/DisplayCanvas.js"],"sourcesContent":["import { LoaderCircle, ImageIcon } from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport ActionBar from './ActionBar';\nimport ImageRefiner from './ImageRefiner';\n\nconst DisplayCanvas = ({ \n  displayCanvasRef, \n  isLoading,\n  handleSaveImage,\n  handleRegenerate,\n  hasGeneratedContent = false,\n  currentDimension,\n  onOpenHistory,\n  onRefineImage\n}) => {\n  // Use a local state that combines props with local state\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  \n  // Update placeholder visibility when loading or content prop changes\n  useEffect(() => {\n    if (hasGeneratedContent) {\n      setShowPlaceholder(false);\n    } else if (isLoading) {\n      setShowPlaceholder(true);\n    }\n  }, [isLoading, hasGeneratedContent]);\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"relative w-full flex justify-center\">\n        <canvas\n          ref={displayCanvasRef}\n          width={currentDimension.width}\n          height={currentDimension.height}\n          className=\"border border-gray-300 bg-white rounded-xl shadow-soft\"\n          style={{\n            aspectRatio: `${currentDimension.width} / ${currentDimension.height}`,\n            maxWidth: '100%',\n            maxHeight: '600px',\n            width: 'auto',\n            height: 'auto'\n          }}\n          aria-label=\"Generated image canvas\"\n        />\n        \n        {/* Loading overlay */}\n        {isLoading && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-black/5 rounded-xl\">\n            <div className=\"bg-white/90 rounded-full p-3 shadow-medium\">\n              <LoaderCircle className=\"w-8 h-8 animate-spin text-gray-700\" />\n            </div>\n          </div>\n        )}\n        \n        {/* Placeholder overlay - only show when not loading and no content has been generated */}\n        {showPlaceholder && !isLoading && !hasGeneratedContent && (\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\n            <ImageIcon className=\"w-10 h-10 text-gray-300 mb-2\" />\n            <p className=\"text-gray-500 text-lg font-medium\">Generation will appear here</p>\n          </div>\n        )}\n      </div>\n\n      {/* ActionBar moved below canvas */}\n      <div className=\"w-full flex justify-end\">\n        <ActionBar\n          handleSaveImage={handleSaveImage}\n          handleRegenerate={handleRegenerate}\n          onOpenHistory={onOpenHistory}\n        />\n      </div>\n\n      {/* Image Refiner */}\n      <ImageRefiner\n        onRefine={onRefineImage}\n        isLoading={isLoading}\n        hasGeneratedContent={hasGeneratedContent}\n      />\n    </div>\n  );\n};\n\nexport default DisplayCanvas; "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,gBAAgB,CAAC,EACrB,gBAAgB,EAChB,SAAS,EACT,eAAe,EACf,gBAAgB,EAChB,sBAAsB,KAAK,EAC3B,gBAAgB,EAChB,aAAa,EACb,aAAa,EACd;IACC,yDAAyD;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,qEAAqE;IACrE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,qBAAqB;YACvB,mBAAmB;QACrB,OAAO,IAAI,WAAW;YACpB,mBAAmB;QACrB;IACF,GAAG;QAAC;QAAW;KAAoB;IAEnC,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBACC,KAAK;wBACL,OAAO,iBAAiB,KAAK;wBAC7B,QAAQ,iBAAiB,MAAM;wBAC/B,WAAU;wBACV,OAAO;4BACL,aAAa,GAAG,iBAAiB,KAAK,CAAC,GAAG,EAAE,iBAAiB,MAAM,EAAE;4BACrE,UAAU;4BACV,WAAW;4BACX,OAAO;4BACP,QAAQ;wBACV;wBACA,cAAW;;;;;;oBAIZ,2BACC,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BAAI,WAAU;sCACb,cAAA,qKAAC,+MAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;;;;;;oBAM7B,mBAAmB,CAAC,aAAa,CAAC,qCACjC,qKAAC;wBAAI,WAAU;;0CACb,qKAAC,iMAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,qKAAC;gCAAE,WAAU;0CAAoC;;;;;;;;;;;;;;;;;;0BAMvD,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC,gHAAA,CAAA,UAAS;oBACR,iBAAiB;oBACjB,kBAAkB;oBAClB,eAAe;;;;;;;;;;;0BAKnB,qKAAC,mHAAA,CAAA,UAAY;gBACX,UAAU;gBACV,WAAW;gBACX,qBAAqB;;;;;;;;;;;;AAI7B;uCAEe","debugId":null}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/StyleSelector.js"],"sourcesContent":["import { RefreshCw, Plus, Upload, Edit, Trash2, RefreshCcw, HelpCircle } from 'lucide-react';\nimport { useState, useRef, useEffect } from 'react';\n\n// Define default style options with display names and prompts\nconst defaultStyleOptions = {\n  material: {\n    name: \"Chrome\",\n    file: \"chrome.jpeg\",\n    prompt: \"Recreate this doodle as a physical chrome sculpture made of a chromium metal tubes or pipes in a professional studio setting. If it is typography, render it accordingly, but always always have a black background and studio lighting. Render it in Cinema 4D with Octane, using studio lighting against a pure black background. Make it look like a high-end product rendering of a sculptural piece. Flat Black background always\"\n  },\n  honey: {\n    name: \"Honey\",\n    file: \"honey.jpeg\",\n    prompt: \"Transform this sketch into a honey-like substance. Render it as if made entirely of translucent, golden honey with characteristic viscous drips and flows. Add realistic liquid properties including surface tension, reflections, and light refraction. Use studio lighting to highlight the amber tones and glossy surface against a black background. Make it appear as if captured in a high-end commercial photography setup.\"\n  },\n  softbody: {\n    name: \"Soft Body\",\n    file: \"softbody.jpeg\",\n    prompt: \"Convert this drawing / text into a soft body physics render. Render it as if made of a soft, jelly-like material that responds to gravity and motion. Add realistic deformation, bounce, and squash effects typical of soft body dynamics. Use dramatic lighting against a black background to emphasize the material's translucency and surface properties. Make it look like a high-end 3D animation frame.\"\n  },\n  topographic: {\n    name: \"Topographic\",\n    file: \"topographic.jpeg\",\n    prompt: \"Transform this sketch into a sculptural form composed of precisely stacked, thin metallic rings or layers. Render it with warm copper/bronze tones with each layer maintaining equal spacing from adjacent layers, creating a topographic map effect. The form should appear to flow and undulate while maintaining the precise parallel structure. Use dramatic studio lighting against a pure black background to highlight the metallic luster and dimensional quality. Render it in a high-end 3D visualization style with perfect definition between each ring layer.\"\n  },\n  testMaterial: {\n    name: \"Test Material\",\n    file: \"test-material.jpeg\",\n    prompt: \"Transform this sketch into an experimental material with unique properties. Use dramatic studio lighting against a pure black background to showcase the material's characteristics. Render it in a high-end 3D style with professional lighting and composition.\"\n  }\n};\n\n// Create a mutable copy that will include user-added materials\nexport let styleOptions = { ...defaultStyleOptions };\n\n// Function to get prompt based on style mode\nexport const getPromptForStyle = (styleMode) => {\n  return styleOptions[styleMode]?.prompt || styleOptions.material.prompt;\n};\n\n// Replace with a simpler generatePromptForMaterial function\nexport const generatePromptForMaterial = (materialName) => {\n  return `Transform this sketch into a ${materialName.toLowerCase()} material. Render it in a high-end 3D visualization style with professional studio lighting against a pure black background. Make it look like a premium product rendering with detailed material properties and characteristics.`;\n};\n\nconst StyleSelector = ({ styleMode, setStyleMode, handleGenerate }) => {\n  const [showAddMaterialModal, setShowAddMaterialModal] = useState(false);\n  const [newMaterialName, setNewMaterialName] = useState('');\n  const [isGeneratingThumbnail, setIsGeneratingThumbnail] = useState(false);\n  const [useCustomImage, setUseCustomImage] = useState(false);\n  const [customImagePreview, setCustomImagePreview] = useState('');\n  const [customImageFile, setCustomImageFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const [recentlyAdded, setRecentlyAdded] = useState(null);\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [showCustomPrompt, setShowCustomPrompt] = useState(false);\n  const [previewThumbnail, setPreviewThumbnail] = useState('');\n  const [isGeneratingPreview, setIsGeneratingPreview] = useState(false);\n  const [materials, setMaterials] = useState(defaultStyleOptions);\n\n  // Load custom materials from local storage on component mount\n  useEffect(() => {\n    loadCustomMaterials();\n  }, []);\n\n  // Extract loadCustomMaterials into its own named function\n  const loadCustomMaterials = () => {\n    try {\n      const savedMaterials = localStorage.getItem('customMaterials');\n      if (savedMaterials) {\n        const parsedMaterials = JSON.parse(savedMaterials);\n        // Update both the styleOptions and the state\n        const updatedMaterials = { ...defaultStyleOptions, ...parsedMaterials };\n        styleOptions = updatedMaterials;\n        setMaterials(updatedMaterials);\n        console.log('Loaded custom materials from local storage');\n      }\n    } catch (error) {\n      console.error('Error loading custom materials:', error);\n    }\n  };\n\n  // Generate preview thumbnail automatically when material name or custom prompt changes\n  useEffect(() => {\n    const generatePreviewThumbnail = async () => {\n      if (!newMaterialName.trim() || useCustomImage || isGeneratingThumbnail) return;\n      \n      // Clear any existing preview if we're changing the prompt\n      const newPrompt = showCustomPrompt && customPrompt.trim() \n        ? customPrompt \n        : generatePromptForMaterial(newMaterialName);\n      \n      // Don't regenerate if we're just showing the UI, need actual content changes\n      if (!newMaterialName || (showCustomPrompt && !customPrompt.trim())) return;\n      \n      // Set loading state\n      setIsGeneratingPreview(true);\n      \n      try {\n        // Generate a thumbnail using the API\n        const response = await fetch(\"/api/generate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            prompt: newPrompt,\n          }),\n        });\n        \n        const data = await response.json();\n        \n        if (data.success && data.imageData) {\n          // Set the preview thumbnail\n          setPreviewThumbnail(`data:image/jpeg;base64,${data.imageData}`);\n        }\n      } catch (error) {\n        console.error(\"Error generating preview thumbnail:\", error);\n      } finally {\n        setIsGeneratingPreview(false);\n      }\n    };\n    \n    // Add a small delay to avoid excessive API calls while typing\n    const timeoutId = setTimeout(() => {\n      generatePreviewThumbnail();\n    }, 1500);\n    \n    return () => clearTimeout(timeoutId);\n  }, [newMaterialName, useCustomImage, showCustomPrompt, customPrompt]);\n\n  // Save custom materials to local storage\n  const saveCustomMaterials = () => {\n    try {\n      const customMaterials = {};\n      Object.entries(styleOptions).forEach(([key, value]) => {\n        if (!defaultStyleOptions[key]) {\n          customMaterials[key] = value;\n        }\n      });\n      \n      localStorage.setItem('customMaterials', JSON.stringify(customMaterials));\n      const updatedMaterials = { ...defaultStyleOptions, ...customMaterials };\n      styleOptions = updatedMaterials;\n      setMaterials(updatedMaterials); // Update the state to trigger re-render\n      console.log('Saved custom materials to local storage');\n    } catch (error) {\n      console.error('Error saving custom materials:', error);\n    }\n  };\n\n  const handleAddMaterial = () => {\n    setShowAddMaterialModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowAddMaterialModal(false);\n    setNewMaterialName('');\n    setUseCustomImage(false);\n    setCustomImagePreview('');\n    setCustomImageFile(null);\n    setCustomPrompt('');\n    setShowCustomPrompt(false);\n    setPreviewThumbnail('');\n  };\n\n  // Handle clicking outside of the modal to close it\n  const handleClickOutsideModal = (e) => {\n    // If the clicked element is the backdrop (has the modalBackdrop class)\n    if (e.target.classList.contains('modalBackdrop')) {\n      handleCloseModal();\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    if (!file.type.startsWith('image/')) {\n      alert('Please select an image file');\n      return;\n    }\n    \n    const reader = new FileReader();\n    reader.onload = () => {\n      // When the file is loaded, create a temporary image to extract a square crop\n      const img = new Image();\n      img.onload = () => {\n        // Create a canvas element to crop the image to a square\n        const canvas = document.createElement('canvas');\n        // Determine the size of the square (min of width and height)\n        const size = Math.min(img.width, img.height);\n        canvas.width = size;\n        canvas.height = size;\n        \n        // Calculate the position to start drawing to center the crop\n        const offsetX = (img.width - size) / 2;\n        const offsetY = (img.height - size) / 2;\n        \n        // Draw the cropped image to the canvas\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, offsetX, offsetY, size, size, 0, 0, size, size);\n        \n        // Convert the canvas to a data URL\n        const croppedImageDataUrl = canvas.toDataURL(file.type);\n        setCustomImagePreview(croppedImageDataUrl);\n        setCustomImageFile(file);\n      };\n      img.src = reader.result;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const triggerFileInput = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleGenerateDefaultPrompt = () => {\n    if (!newMaterialName.trim()) return;\n    \n    // Generate default prompt based on material name\n    const defaultPrompt = generatePromptForMaterial(newMaterialName);\n    setCustomPrompt(defaultPrompt);\n    \n    // Clear the preview so it will regenerate with the new prompt\n    setPreviewThumbnail('');\n  };\n\n  const handleCreateMaterial = async () => {\n    if (!newMaterialName.trim()) return;\n    \n    setIsGeneratingThumbnail(true);\n    try {\n      let imageData;\n      \n      // Check if we're editing an existing material\n      const isEditing = recentlyAdded && styleOptions[recentlyAdded]?.isCustom;\n      \n      // Generate the prompt to use (either custom or generated)\n      const generatedPrompt = showCustomPrompt && customPrompt.trim() \n        ? customPrompt \n        : generatePromptForMaterial(newMaterialName);\n      \n      if (useCustomImage && customImagePreview) {\n        // Use the custom image data directly\n        // If it's already a base64 string (from an existing material), extract just the data part\n        if (customImagePreview.includes('base64,')) {\n          imageData = customImagePreview.split(',')[1]; // Extract base64 data\n        } else {\n          imageData = customImagePreview;\n        }\n      } else if (previewThumbnail && !isEditing) {\n        // Use the already generated preview thumbnail if available\n        imageData = previewThumbnail.split(',')[1]; // Extract base64 data\n      } else if (!isEditing) {\n        // Only generate a new thumbnail if we're not editing with an existing image\n        // and we don't have a preview thumbnail\n        // Generate a thumbnail using the current API\n        const response = await fetch(\"/api/generate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            prompt: generatedPrompt,\n            // No drawing data needed for thumbnail generation\n          }),\n        });\n        \n        const data = await response.json();\n        \n        if (!data.success || !data.imageData) {\n          throw new Error(data.error || \"Failed to generate thumbnail\");\n        }\n        \n        imageData = data.imageData;\n      } else {\n        // When editing and not changing the image, keep the existing image\n        imageData = styleOptions[recentlyAdded].imageData;\n      }\n      \n      // Determine the material key to use\n      const materialKey = isEditing \n        ? recentlyAdded \n        : newMaterialName.toLowerCase().replace(/\\s+/g, '-');\n      \n      // Create a filename for the thumbnail\n      const fileName = `${materialKey}.jpeg`;\n      \n      // Create or update the material\n      styleOptions[materialKey] = {\n        name: newMaterialName,\n        file: fileName,\n        prompt: generatedPrompt,\n        imageData: imageData,\n        isCustom: true,\n        createdAt: isEditing ? styleOptions[materialKey].createdAt : new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      // Save to local storage\n      saveCustomMaterials();\n      \n      // Set recently added to temporarily highlight the material\n      if (!isEditing) {\n        setRecentlyAdded(materialKey);\n        setTimeout(() => setRecentlyAdded(null), 3000);\n      } else {\n        // For edits, briefly highlight to show it was updated\n        setRecentlyAdded(null);\n        setTimeout(() => {\n          setRecentlyAdded(materialKey);\n          setTimeout(() => setRecentlyAdded(null), 1500);\n        }, 100);\n      }\n      \n      // Close the modal and reset state\n      handleCloseModal();\n      \n      // Switch to the material\n      setStyleMode(materialKey);\n      \n      // Generate with the material\n      if (handleGenerate) {\n        handleGenerate();\n      }\n    } catch (error) {\n      console.error(\"Error creating/updating material:\", error);\n      alert(\"Error creating/updating material. Please try again.\");\n    } finally {\n      setIsGeneratingThumbnail(false);\n    }\n  };\n\n  // Add function to edit existing material and improve with regeneration functionality\n  const handleEditMaterial = (event, key) => {\n    event.stopPropagation(); // Prevent triggering the parent button's onClick\n    \n    // Only allow editing custom materials\n    if (styleOptions[key]?.isCustom) {\n      const material = styleOptions[key];\n      \n      // Pre-fill the form with existing data\n      setNewMaterialName(material.name);\n      setCustomPrompt(material.prompt);\n      setShowCustomPrompt(true);\n      \n      // If we have image data, show it\n      if (material.imageData) {\n        setUseCustomImage(true);\n        setCustomImagePreview(`data:image/jpeg;base64,${material.imageData}`);\n      }\n      \n      // Open the modal\n      setShowAddMaterialModal(true);\n      \n      // Store the key to know we're editing not creating\n      setRecentlyAdded(key);\n    }\n  };\n\n  // Add function to regenerate thumbnail for existing material\n  const handleRegenerateThumbnail = async () => {\n    setIsGeneratingPreview(true);\n    \n    try {\n      // Generate the prompt to use\n      const promptToUse = showCustomPrompt && customPrompt.trim()\n        ? customPrompt\n        : generatePromptForMaterial(newMaterialName);\n      \n      // Generate a new thumbnail using the API\n      const response = await fetch(\"/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          prompt: promptToUse,\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success && data.imageData) {\n        // Update the preview\n        setPreviewThumbnail(`data:image/jpeg;base64,${data.imageData}`);\n        // Switch to auto-generate mode\n        setUseCustomImage(false);\n      } else {\n        throw new Error(data.error || \"Failed to regenerate thumbnail\");\n      }\n    } catch (error) {\n      console.error(\"Error regenerating thumbnail:\", error);\n      alert(\"Failed to regenerate thumbnail. Please try again.\");\n    } finally {\n      setIsGeneratingPreview(false);\n    }\n  };\n\n  const handleDeleteMaterial = (event, key) => {\n    event.stopPropagation(); // Prevent triggering the parent button's onClick\n    \n    // Only allow deleting custom materials\n    if (styleOptions[key]?.isCustom) {\n      if (window.confirm(`Are you sure you want to delete the \"${styleOptions[key].name}\" material?`)) {\n        // If currently selected, switch to default material\n        if (styleMode === key) {\n          setStyleMode('material');\n        }\n        \n        // Delete the material\n        const { [key]: deleted, ...remaining } = styleOptions;\n        const updatedMaterials = { ...defaultStyleOptions, ...remaining };\n        styleOptions = updatedMaterials;\n        setMaterials(updatedMaterials);\n        \n        // Save the updated materials\n        const customMaterials = {};\n        Object.entries(remaining).forEach(([k, v]) => {\n          if (!defaultStyleOptions[k]) {\n            customMaterials[k] = v;\n          }\n        });\n        localStorage.setItem('customMaterials', JSON.stringify(customMaterials));\n      }\n    }\n  };\n\n  // Add a function to sort materials in the desired order\n  const getSortedMaterials = (materials) => {\n    // 1. Get original materials (excluding Test Material)\n    const originalMaterials = Object.entries(defaultStyleOptions)\n      .filter(([key]) => key !== 'testMaterial')\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n    // 2. Get custom/locally saved materials (excluding Test Material)\n    const customMaterials = Object.entries(materials)\n      .filter(([key]) => !defaultStyleOptions[key] && key !== 'testMaterial')\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n    // 3. Get Test Material\n    const testMaterial = materials.testMaterial ? { testMaterial: materials.testMaterial } : {};\n\n    // Combine in desired order\n    return {\n      ...originalMaterials,\n      ...customMaterials,\n      ...testMaterial\n    };\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"overflow-x-auto\">\n        <div className=\"flex flex-wrap gap-1\">\n          {/* 1. Original + 2. Local + 3. Test Material */}\n          {Object.entries(getSortedMaterials(materials)).map(([key, { name, file, imageData, isCustom }]) => (\n            <button\n              key={key}\n              onClick={async () => {\n                const isSameMaterial = styleMode === key;\n                if (!isSameMaterial) {\n                  setStyleMode(key);\n                } else {\n                  handleGenerate();\n                }\n              }}\n              type=\"button\"\n              aria-label={`Select ${name} style`}\n              aria-pressed={styleMode === key}\n              className=\"focus:outline-none focus:ring-2 focus:ring-gray-400 relative group\"\n            >\n              <div className={`w-20 border ${\n                key === 'testMaterial' \n                  ? 'border-purple-400 border-dashed' \n                  : isCustom\n                    ? 'border-blue-300'\n                    : 'border-gray-300'\n              } overflow-hidden rounded-xl ${\n                styleMode === key \n                  ? 'bg-white' \n                  : 'bg-gray-50'\n              }`}>\n                {/* Image container - fixed to be square */}\n                <div className=\"w-full relative\" style={{ aspectRatio: '1/1' }}>\n                  {key === 'testMaterial' ? (\n                    <div className=\"w-full h-full flex items-center justify-center bg-purple-50\">\n                      <HelpCircle className=\"w-8 h-8 text-purple-500\" />\n                    </div>\n                  ) : (\n                    <img \n                      src={imageData ? `data:image/jpeg;base64,${imageData}` : `/samples/${file}`}\n                      alt={`${name} style example`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  )}\n                  {/* Improved control buttons for materials */}\n                  {isCustom && (\n                    <div className=\"absolute inset-0\">\n                      <button\n                        onClick={(e) => handleEditMaterial(e, key)}\n                        className=\"absolute top-1 right-1 bg-gray-800 bg-opacity-70 hover:bg-opacity-90 text-white rounded-full w-5 h-5 flex items-center justify-center transition-opacity\"\n                        aria-label={`Edit ${name} material`}\n                      >\n                        <Edit className=\"w-2.5 h-2.5\" />\n                      </button>\n                      <button\n                        onClick={(e) => handleDeleteMaterial(e, key)}\n                        className=\"absolute top-1 left-1 bg-gray-800 bg-opacity-70 hover:bg-opacity-90 text-white rounded-full w-5 h-5 flex items-center justify-center transition-opacity\"\n                        aria-label={`Delete ${name} material`}\n                      >\n                        <Trash2 className=\"w-2.5 h-2.5\" />\n                      </button>\n                    </div>\n                  )}\n                </div>\n                {/* Label below image */}\n                <div className={`px-1 py-1 text-left text-xs font-medium border-t ${\n                  key === 'testMaterial' \n                    ? 'border-purple-200' \n                    : isCustom\n                      ? 'border-blue-200'\n                      : 'border-gray-200'\n                } ${\n                  styleMode === key \n                    ? key === 'testMaterial'\n                      ? 'bg-purple-800 text-white'\n                      : isCustom\n                        ? 'bg-blue-800 text-white'\n                        : 'bg-gray-800 text-white'\n                    : key === 'testMaterial'\n                      ? 'bg-purple-50 text-purple-600'\n                      : isCustom\n                        ? 'bg-blue-50 text-blue-600'\n                        : 'bg-gray-100 text-gray-600'\n                }`}>\n                  <div className=\"truncate\">\n                    {name}\n                  </div>\n                </div>\n              </div>\n            </button>\n          ))}\n          \n          {/* 4. Add Material Button - Always at the end */}\n          <button\n            onClick={handleAddMaterial}\n            type=\"button\"\n            aria-label=\"Add new material\"\n            className=\"focus:outline-none focus:ring-2 focus:ring-gray-400\"\n          >\n            <div className=\"w-20 border border-dashed border-blue-400 overflow-hidden rounded-xl bg-blue-50 flex flex-col\">\n              <div className=\"w-full relative\" style={{ aspectRatio: '1/1' }}>\n                <div className=\"flex items-center justify-center h-full\">\n                  <Plus className=\"w-8 h-8 text-blue-500\" />\n                </div>\n              </div>\n              <div className=\"px-1 py-1 text-left text-xs font-medium border-t border-blue-200 bg-blue-100 text-blue-600 w-full\">\n                <div className=\"truncate\">\n                  Add Material\n                </div>\n              </div>\n            </div>\n          </button>\n        </div>\n      </div>\n\n      {/* Add Material Modal - Updated with semi-transparent backdrop */}\n      {showAddMaterialModal && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50 modalBackdrop\"\n          onClick={handleClickOutsideModal}\n        >\n          <div \n            className=\"bg-white p-6 rounded-xl shadow-medium max-w-2xl w-full\"\n            onClick={(e) => e.stopPropagation()}  // Prevent clicks inside from closing the modal\n          >\n            <h2 className=\"text-xl font-bold mb-4\">\n              {recentlyAdded && styleOptions[recentlyAdded] ? 'Edit Material' : 'Add Material'}\n            </h2>\n\n            {/* Material Name and Preview section */}\n            <div className=\"flex gap-6 items-start mb-6\">\n              <div className=\"flex-1\">\n                <label className=\"block text-gray-700 text-base mb-2\">Material Name</label>\n                <input\n                  type=\"text\"\n                  value={newMaterialName}\n                  onChange={(e) => setNewMaterialName(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Enter material name\"\n                />\n              </div>\n\n              {/* Thumbnail Preview */}\n              <div className=\"relative w-[120px] h-[120px] rounded-lg overflow-hidden border border-gray-200\">\n                {(previewThumbnail || customImagePreview) ? (\n                  <img \n                    src={useCustomImage ? customImagePreview : previewThumbnail} \n                    alt=\"Material preview\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full bg-gray-50 flex items-center justify-center\">\n                    <p className=\"text-gray-400 text-sm text-center px-4\">\n                      {isGeneratingPreview ? 'Generating...' : 'Preview'}\n                    </p>\n                  </div>\n                )}\n                {isGeneratingPreview && (\n                  <div className=\"absolute inset-0 bg-black/5 flex items-center justify-center\">\n                    <div className=\"bg-white/90 rounded-full p-2\">\n                      <RefreshCw className=\"w-5 h-5 animate-spin text-gray-700\" />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Prompt customization */}\n            <div className=\"mb-4\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Prompt\n                </label>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowCustomPrompt(!showCustomPrompt)}\n                  className=\"text-xs text-blue-600 hover:text-blue-800\"\n                >\n                  {showCustomPrompt ? 'Use Default Prompt' : 'Customize Prompt'}\n                </button>\n              </div>\n              \n              {showCustomPrompt ? (\n                <>\n                  <textarea\n                    value={customPrompt}\n                    onChange={(e) => setCustomPrompt(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 h-32\"\n                    placeholder=\"Enter a custom prompt for your material...\"\n                  />\n                  <div className=\"flex justify-end mt-1\">\n                    <button\n                      type=\"button\"\n                      onClick={handleGenerateDefaultPrompt}\n                      className=\"text-xs text-blue-600 hover:text-blue-800\"\n                      disabled={!newMaterialName.trim()}\n                    >\n                      Generate Default\n                    </button>\n                  </div>\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Customize how your material is applied to drawings\n                  </p>\n                </>\n              ) : (\n                <p className=\"text-sm text-gray-500\">\n                  Using auto-generated prompt based on the material name\n                </p>\n              )}\n            </div>\n            \n            {/* Image Selection Options - Simplified */}\n            <div className=\"mb-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"block text-sm font-medium text-gray-700\">\n                  Material Preview\n                </span>\n                \n                <button\n                  onClick={() => setUseCustomImage(!useCustomImage)}\n                  type=\"button\"\n                  className=\"text-xs text-gray-600 hover:text-gray-800\"\n                >\n                  {useCustomImage ? 'Use Auto-Generated' : 'Upload Custom Image'}\n                </button>\n              </div>\n              \n              {useCustomImage ? (\n                <div className=\"border-2 border-dashed border-gray-300 rounded-md p-4 text-center\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    ref={fileInputRef}\n                    onChange={handleFileChange}\n                    className=\"hidden\"\n                  />\n                  \n                  {customImagePreview ? (\n                    <div className=\"mb-2\">\n                      <div className=\"relative w-32 h-32 mx-auto\">\n                        <img \n                          src={customImagePreview} \n                          alt=\"Material preview\" \n                          className=\"w-full h-full object-cover\"\n                        />\n                        <button\n                          onClick={triggerFileInput}\n                          className=\"absolute top-2 right-2 bg-gray-800 bg-opacity-70 hover:bg-opacity-90 text-white rounded-full w-7 h-7 flex items-center justify-center\"\n                        >\n                          <Edit className=\"w-3.5 h-3.5\" />\n                        </button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div \n                      onClick={triggerFileInput}\n                      className=\"flex flex-col items-center justify-center cursor-pointer py-4\"\n                    >\n                      <Upload className=\"w-8 h-8 text-gray-400 mb-2\" />\n                      <p className=\"text-sm text-gray-500\">\n                        Click to upload image\n                      </p>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"border-2 border-gray-300 rounded-md p-4 text-center\">\n                  {previewThumbnail ? (\n                    <div className=\"mb-2 relative\">\n                      <div className=\"w-32 h-32 mx-auto\">\n                        <img \n                          src={previewThumbnail} \n                          alt=\"Auto-generated preview\" \n                          className=\"w-full h-full object-cover\"\n                        />\n                        <button\n                          onClick={handleRegenerateThumbnail}\n                          disabled={isGeneratingPreview}\n                          className=\"absolute top-2 right-2 bg-gray-800 bg-opacity-70 hover:bg-opacity-90 text-white rounded-full w-7 h-7 flex items-center justify-center\"\n                        >\n                          <RefreshCcw className=\"w-3.5 h-3.5\" />\n                        </button>\n                      </div>\n                    </div>\n                  ) : isGeneratingPreview ? (\n                    <div className=\"py-8 flex flex-col items-center justify-center\">\n                      <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mb-2\"></div>\n                      <p className=\"text-sm text-gray-500\">Generating preview...</p>\n                    </div>\n                  ) : (\n                    <div className=\"py-8 flex flex-col items-center justify-center\">\n                      <p className=\"text-sm text-gray-500\">\n                        {newMaterialName ? \n                          \"Preview will generate automatically\" :\n                          \"Enter a material name to generate a preview\"\n                        }\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex justify-end gap-3 mt-6\">\n              <button\n                onClick={() => setShowAddMaterialModal(false)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleCreateMaterial}\n                disabled={isGeneratingThumbnail || !newMaterialName.trim()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                Create Material\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StyleSelector; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2400, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/ErrorModal.js"],"sourcesContent":["import { X } from 'lucide-react';\n\nconst ErrorModal = ({ \n  showErrorModal, \n  closeErrorModal, \n  customApiKey, \n  setCustomApiKey, \n  handleApiKeySubmit \n}) => {\n  return (\n    <>\n      {showErrorModal && (\n        <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-medium max-w-md w-full mx-4\">\n            <div className=\"flex flex-col gap-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-xl font-medium text-gray-800\">API Quota Exceeded</h2>\n                <button \n                  type=\"button\"\n                  onClick={closeErrorModal}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                  aria-label=\"Close\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n              \n              <div className=\"text-gray-600\">\n                <p className=\"mb-2\">\n                  You've exceeded your API quota. You can:\n                </p>\n                <ul className=\"list-disc ml-5 mb-4 space-y-1 text-gray-600\">\n                  <li>Wait for your quota to reset</li>\n                  <li>Use your own API key</li>\n                </ul>\n              </div>\n              \n              <form onSubmit={handleApiKeySubmit} className=\"space-y-3\">\n                <div>\n                  <label \n                    htmlFor=\"apiKey\" \n                    className=\"block text-sm font-medium text-gray-700 mb-1\"\n                  >\n                    Your Gemini API Key\n                  </label>\n                  <input\n                    id=\"apiKey\"\n                    type=\"password\"\n                    placeholder=\"Enter your Gemini API key\"\n                    value={customApiKey}\n                    onChange={(e) => setCustomApiKey(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent\"\n                  />\n                </div>\n                <div className=\"flex justify-end gap-3 pt-2\">\n                  <button\n                    type=\"button\"\n                    onClick={closeErrorModal}\n                    className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-800 transition-colors\"\n                  >\n                    Use My Key\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ErrorModal; "],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,aAAa,CAAC,EAClB,cAAc,EACd,eAAe,EACf,YAAY,EACZ,eAAe,EACf,kBAAkB,EACnB;IACC,qBACE;kBACG,gCACC,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCAAG,WAAU;8CAAoC;;;;;;8CAClD,qKAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;oCACV,cAAW;8CAEX,cAAA,qKAAC,qLAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAIjB,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCAAE,WAAU;8CAAO;;;;;;8CAGpB,qKAAC;oCAAG,WAAU;;sDACZ,qKAAC;sDAAG;;;;;;sDACJ,qKAAC;sDAAG;;;;;;;;;;;;;;;;;;sCAIR,qKAAC;4BAAK,UAAU;4BAAoB,WAAU;;8CAC5C,qKAAC;;sDACC,qKAAC;4CACC,SAAQ;4CACR,WAAU;sDACX;;;;;;sDAGD,qKAAC;4CACC,IAAG;4CACH,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4CAC/C,WAAU;;;;;;;;;;;;8CAGd,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CACC,MAAK;4CACL,SAAS;4CACT,WAAU;sDACX;;;;;;sDAGD,qKAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnB;uCAEe","debugId":null}},
    {"offset": {"line": 2582, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/TextInput.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst TextInput = ({ \n  isTyping, \n  textInputRef, \n  textInput, \n  setTextInput, \n  handleTextInput, \n  textPosition \n}) => {\n  if (!isTyping) {\n    return null;\n  }\n  \n  return (\n    <div\n      className=\"absolute z-50 bg-white border border-gray-300 rounded-lg shadow-medium p-2\"\n      style={{\n        top: textPosition.y,\n        left: textPosition.x,\n        transform: 'translateY(-100%)'\n      }}\n    >\n      <input\n        ref={textInputRef}\n        type=\"text\"\n        value={textInput}\n        onChange={(e) => setTextInput(e.target.value)}\n        onKeyDown={handleTextInput}\n        placeholder=\"Type text...\"\n        className=\"w-full p-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-400\"\n        aria-label=\"Text input for canvas\"\n      />\n    </div>\n  );\n};\n\nexport default TextInput; "],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,YAAY,CAAC,EACjB,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,eAAe,EACf,YAAY,EACb;IACC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,qBACE,qKAAC;QACC,WAAU;QACV,OAAO;YACL,KAAK,aAAa,CAAC;YACnB,MAAM,aAAa,CAAC;YACpB,WAAW;QACb;kBAEA,cAAA,qKAAC;YACC,KAAK;YACL,MAAK;YACL,OAAO;YACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;YAC5C,WAAW;YACX,aAAY;YACZ,WAAU;YACV,cAAW;;;;;;;;;;;AAInB;uCAEe","debugId":null}},
    {"offset": {"line": 2627, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/Header.js"],"sourcesContent":["const Header = () => {\n  return (\n    <header className=\"w-full flex items-center\">\n      <div className=\"flex flex-col items-start\">\n        <h1 className=\"text-lg font-medium tracking-[-0.2px] text-gray-800\" style={{ fontFamily: \"'Google Sans Text', sans-serif\" }}>GEMINI 3D</h1>\n        \n        <p className=\"text-gray-400\">\n          By <a href=\"https://www.instagram.com/devethanvalladares/?hl=en/\" className=\"underline hover:text-gray-600\">Dev Valladares</a> \n          {\" \"}& <a href=\"https://x.com/trudypainter\" className=\"underline hover:text-gray-600\">Trudy Painter</a>\n        </p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header; "],"names":[],"mappings":";;;;;AAAA,MAAM,SAAS;IACb,qBACE,qKAAC;QAAO,WAAU;kBAChB,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAG,WAAU;oBAAsD,OAAO;wBAAE,YAAY;oBAAiC;8BAAG;;;;;;8BAE7H,qKAAC;oBAAE,WAAU;;wBAAgB;sCACxB,qKAAC;4BAAE,MAAK;4BAAuD,WAAU;sCAAgC;;;;;;wBAC3G;wBAAI;sCAAE,qKAAC;4BAAE,MAAK;4BAA6B,WAAU;sCAAgC;;;;;;;;;;;;;;;;;;;;;;;AAKhG;uCAEe","debugId":null}},
    {"offset": {"line": 2698, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/DimensionSelector.js"],"sourcesContent":["import { Square, RectangleVertical, RectangleHorizontal, ChevronDown } from 'lucide-react';\nimport { useState, useEffect, useRef } from 'react';\n\nconst dimensions = [\n  {\n    id: 'landscape',\n    label: '3:2',\n    width: 1500,\n    height: 1000,\n    icon: RectangleHorizontal\n  },\n  {\n    id: 'portrait',\n    label: '4:5',\n    width: 1000,\n    height: 1250,\n    icon: RectangleVertical\n  },\n  {\n    id: 'square',\n    label: '1:1',\n    width: 1000,\n    height: 1000,\n    icon: Square\n  }\n];\n\nconst DimensionSelector = ({ currentDimension = dimensions[0], onDimensionChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  \n  // Replace click handlers with hover handlers\n  const handleMouseEnter = () => setIsOpen(true);\n  const handleMouseLeave = () => setIsOpen(false);\n\n  return (\n    <div \n      className=\"relative z-50\" \n      ref={dropdownRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {/* Current selection - removed ChevronDown */}\n      <button\n        className=\"flex items-center gap-2 bg-gray-200 px-4 py-2 rounded-full transition-opacity\"\n        style={{ opacity: isOpen ? 1 : 0.7 }} // Add opacity for selection state\n      >\n        {(() => {\n          const current = dimensions.find(d => d.id === currentDimension.id) || dimensions[0];\n          const Icon = current.icon;\n          return (\n            <>\n              <Icon className=\"w-4 h-4 text-gray-600\" />\n              <span className=\"text-sm text-gray-600\">{current.label}</span>\n            </>\n          );\n        })()}\n      </button>\n\n      {/* Dropdown */}\n      {isOpen && (\n        <div className=\"absolute right-0 top-full mt-1 bg-white rounded-lg shadow-lg border border-gray-200 z-10\">\n          {dimensions.map((dim) => {\n            const Icon = dim.icon;\n            return (\n              <button\n                key={dim.id}\n                onClick={() => onDimensionChange(dim)}\n                className={`w-full p-2 flex items-center gap-2 hover:bg-gray-50 transition-opacity ${\n                  currentDimension.id === dim.id ? 'opacity-100' : 'opacity-70'\n                }`}\n              >\n                <Icon className=\"w-4 h-4 text-gray-600\" />\n                <span className=\"text-sm text-gray-600 whitespace-nowrap\">{dim.label}</span>\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DimensionSelector; "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;;AAEA,MAAM,aAAa;IACjB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,6NAAA,CAAA,sBAAmB;IAC3B;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,yNAAA,CAAA,oBAAiB;IACzB;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,+LAAA,CAAA,SAAM;IACd;CACD;AAED,MAAM,oBAAoB,CAAC,EAAE,mBAAmB,UAAU,CAAC,EAAE,EAAE,iBAAiB,EAAE;IAChF,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,cAAc,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAE;IAE3B,6CAA6C;IAC7C,MAAM,mBAAmB,IAAM,UAAU;IACzC,MAAM,mBAAmB,IAAM,UAAU;IAEzC,qBACE,qKAAC;QACC,WAAU;QACV,KAAK;QACL,cAAc;QACd,cAAc;;0BAGd,qKAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,SAAS,SAAS,IAAI;gBAAI;0BAElC,CAAC;oBACA,MAAM,UAAU,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,iBAAiB,EAAE,KAAK,UAAU,CAAC,EAAE;oBACnF,MAAM,OAAO,QAAQ,IAAI;oBACzB,qBACE;;0CACE,qKAAC;gCAAK,WAAU;;;;;;0CAChB,qKAAC;gCAAK,WAAU;0CAAyB,QAAQ,KAAK;;;;;;;;gBAG5D,CAAC;;;;;;YAIF,wBACC,qKAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC;oBACf,MAAM,OAAO,IAAI,IAAI;oBACrB,qBACE,qKAAC;wBAEC,SAAS,IAAM,kBAAkB;wBACjC,WAAW,CAAC,uEAAuE,EACjF,iBAAiB,EAAE,KAAK,IAAI,EAAE,GAAG,gBAAgB,cACjD;;0CAEF,qKAAC;gCAAK,WAAU;;;;;;0CAChB,qKAAC;gCAAK,WAAU;0CAA2C,IAAI,KAAK;;;;;;;uBAP/D,IAAI,EAAE;;;;;gBAUjB;;;;;;;;;;;;AAKV;uCAEe","debugId":null}},
    {"offset": {"line": 2826, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/HistoryModal.js"],"sourcesContent":["import { X } from 'lucide-react';\n\nconst HistoryModal = ({ \n  isOpen, \n  onClose, \n  history,\n  onSelectImage,\n  currentDimension\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\n      <div className=\"bg-white p-6 rounded-xl shadow-medium max-w-5xl w-full mx-4 max-h-[80vh] flex flex-col\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-medium text-gray-800\">Drawing History</h2>\n          <button \n            type=\"button\"\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n            aria-label=\"Close\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {history.length === 0 ? (\n          <div className=\"flex-1 flex items-center justify-center text-gray-500\">\n            No history available yet. Start drawing to create some!\n          </div>\n        ) : (\n          <div className=\"flex-1 overflow-y-auto grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 p-2\">\n            {history.map((item, index) => (\n              <div \n                key={item.timestamp} \n                className=\"relative group cursor-pointer\"\n                onClick={() => onSelectImage(item)}\n              >\n                <div className=\"aspect-w-3 aspect-h-2 rounded-lg overflow-hidden border border-gray-200\">\n                  <img \n                    src={item.imageUrl} \n                    alt={`Drawing history ${index + 1}`}\n                    className=\"object-cover w-full h-full group-hover:opacity-90 transition-opacity\"\n                  />\n                </div>\n                <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white text-xs p-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  {new Date(item.timestamp).toLocaleString()}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryModal; "],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,eAAe,CAAC,EACpB,MAAM,EACN,OAAO,EACP,OAAO,EACP,aAAa,EACb,gBAAgB,EACjB;IACC,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCAAoC;;;;;;sCAClD,qKAAC;4BACC,MAAK;4BACL,SAAS;4BACT,WAAU;4BACV,cAAW;sCAEX,cAAA,qKAAC,qLAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;gBAIhB,QAAQ,MAAM,KAAK,kBAClB,qKAAC;oBAAI,WAAU;8BAAwD;;;;;yCAIvE,qKAAC;oBAAI,WAAU;8BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM,sBAClB,qKAAC;4BAEC,WAAU;4BACV,SAAS,IAAM,cAAc;;8CAE7B,qKAAC;oCAAI,WAAU;8CACb,cAAA,qKAAC;wCACC,KAAK,KAAK,QAAQ;wCAClB,KAAK,CAAC,gBAAgB,EAAE,QAAQ,GAAG;wCACnC,WAAU;;;;;;;;;;;8CAGd,qKAAC;oCAAI,WAAU;8CACZ,IAAI,KAAK,KAAK,SAAS,EAAE,cAAc;;;;;;;2BAZrC,KAAK,SAAS;;;;;;;;;;;;;;;;;;;;;AAqBnC;uCAEe","debugId":null}},
    {"offset": {"line": 2941, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/components/CanvasContainer.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from \"react\";\nimport Canvas from \"./Canvas\";\nimport DisplayCanvas from \"./DisplayCanvas\";\nimport ToolBar from \"./ToolBar\";\nimport StyleSelector from \"./StyleSelector\";\nimport { getPromptForStyle } from \"./StyleSelector\";\nimport ActionBar from \"./ActionBar\";\nimport ErrorModal from \"./ErrorModal\";\nimport TextInput from \"./TextInput\";\nimport Header from \"./Header\";\nimport DimensionSelector from \"./DimensionSelector\";\nimport HistoryModal from \"./HistoryModal\";\nimport { getCoordinates, initializeCanvas, drawImageToCanvas, drawBezierCurve } from \"./utils/canvasUtils\";\n\nconst CanvasContainer = () => {\n  const canvasRef = useRef(null);\n  const displayCanvasRef = useRef(null);\n  const backgroundImageRef = useRef(null);\n  const [currentDimension, setCurrentDimension] = useState({ \n    id: 'landscape', \n    label: '3:2',\n    width: 1500, \n    height: 1000 \n  });\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [penColor, setPenColor] = useState(\"#000000\");\n  const [penWidth, setPenWidth] = useState(2);\n  const colorInputRef = useRef(null);\n  const [prompt, setPrompt] = useState(\"\");\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [customApiKey, setCustomApiKey] = useState(\"\");\n  const [styleMode, setStyleMode] = useState('material');\n  const [strokeCount, setStrokeCount] = useState(0);\n  const strokeTimeoutRef = useRef(null);\n  const [lastRequestTime, setLastRequestTime] = useState(0);\n  const MIN_REQUEST_INTERVAL = 2000; // Minimum 2 seconds between requests\n  const [currentTool, setCurrentTool] = useState('pencil'); // 'pencil', 'pen', 'eraser', 'text', 'rect', 'circle', 'line', 'star'\n  const [isTyping, setIsTyping] = useState(false);\n  const [undoStack, setUndoStack] = useState([]);\n  const [bezierPoints, setBezierPoints] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [textPosition, setTextPosition] = useState({ x: 0, y: 0 });\n  const textInputRef = useRef(null);\n  const [isPenDrawing, setIsPenDrawing] = useState(false);\n  const [currentBezierPath, setCurrentBezierPath] = useState([]);\n  const [tempPoints, setTempPoints] = useState([]);\n  const [hasGeneratedContent, setHasGeneratedContent] = useState(false);\n  const [imageHistory, setImageHistory] = useState([]);\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState(false);\n\n  // Load background image when generatedImage changes\n  useEffect(() => {\n    if (generatedImage && canvasRef.current) {\n      // Use the window.Image constructor to avoid conflict with Next.js Image component\n      const img = new window.Image();\n      img.onload = () => {\n        backgroundImageRef.current = img;\n        drawImageToCanvas(canvasRef.current, backgroundImageRef.current);\n      };\n      img.src = generatedImage;\n    }\n  }, [generatedImage]);\n\n  // Initialize canvas with white background when component mounts\n  useEffect(() => {\n    if (canvasRef.current) {\n      initializeCanvas(canvasRef.current);\n    }\n    \n    // Also initialize the display canvas\n    if (displayCanvasRef.current) {\n      const displayCtx = displayCanvasRef.current.getContext('2d');\n      displayCtx.fillStyle = '#FFFFFF';\n      displayCtx.fillRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n    }\n  }, []);\n\n  // Add an effect to sync canvas dimensions when they change\n  useEffect(() => {\n    if (canvasRef.current && displayCanvasRef.current) {\n      // Ensure both canvases have the same dimensions\n      canvasRef.current.width = currentDimension.width;\n      canvasRef.current.height = currentDimension.height;\n      displayCanvasRef.current.width = currentDimension.width;\n      displayCanvasRef.current.height = currentDimension.height;\n      \n      // Initialize both canvases with white backgrounds\n      initializeCanvas(canvasRef.current);\n      \n      const displayCtx = displayCanvasRef.current.getContext('2d');\n      displayCtx.fillStyle = '#FFFFFF';\n      displayCtx.fillRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n    }\n  }, [currentDimension]);\n\n  const startDrawing = (e) => {\n    const { x, y } = getCoordinates(e, canvasRef.current);\n    \n    if (e.type === 'touchstart') {\n      e.preventDefault();\n    }\n    \n    console.log('startDrawing called', { currentTool, x, y });\n    \n    const ctx = canvasRef.current.getContext(\"2d\");\n    \n    // Set up the line style at the start of drawing\n    ctx.lineWidth = currentTool === 'eraser' ? 20 : penWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = currentTool === 'eraser' ? '#FFFFFF' : penColor;\n    \n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    setIsDrawing(true);\n    setStrokeCount(prev => prev + 1);\n    \n    // Save canvas state before drawing\n    saveCanvasState();\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { x, y } = getCoordinates(e, canvas);\n    \n    // Occasionally log drawing activity\n    if (Math.random() < 0.05) { // Only log ~5% of move events to avoid console spam\n      console.log('draw called', { currentTool, isDrawing, x, y });\n    }\n    \n    // Set up the line style before drawing\n    ctx.lineWidth = currentTool === 'eraser' ? 20 : penWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    if (currentTool === 'eraser') {\n      ctx.strokeStyle = '#FFFFFF';\n    } else {\n      ctx.strokeStyle = penColor;\n    }\n    \n    if (currentTool === 'pen') {\n      // Show preview line while moving\n      if (tempPoints.length > 0) {\n        const lastPoint = tempPoints[tempPoints.length - 1];\n        ctx.beginPath();\n        ctx.moveTo(lastPoint.x, lastPoint.y);\n        ctx.lineTo(x, y);\n        ctx.stroke();\n      }\n    } else {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  const stopDrawing = async (e) => {\n    console.log('stopDrawing called in CanvasContainer', { \n      isDrawing, \n      currentTool, \n      hasEvent: !!e,\n      eventType: e ? e.type : 'none'\n    });\n    \n    if (!isDrawing) return;\n    setIsDrawing(false);\n    \n    // Remove the timeout-based generation\n    if (strokeTimeoutRef.current) {\n      clearTimeout(strokeTimeoutRef.current);\n      strokeTimeoutRef.current = null;\n    }\n\n    // The Canvas component will handle generation for pen and pencil tools directly\n    // This function now primarily handles stroke counting for other tools\n    \n    // Only generate on mouse/touch up events when not using the pen or pencil tool\n    // (since those are handled by the Canvas component)\n    if (e && (e.type === 'mouseup' || e.type === 'touchend') && \n        currentTool !== 'pen' && currentTool !== 'pencil') {\n      console.log('stopDrawing: detected mouseup/touchend event', { strokeCount });\n      // Check if we have enough strokes to generate (increased to 10 from 3)\n      if (strokeCount >= 10) {\n        console.log('stopDrawing: calling handleGeneration due to stroke count');\n        await handleGeneration();\n        setStrokeCount(0);\n      }\n    }\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    initializeCanvas(canvas);\n    \n    setGeneratedImage(null);\n    backgroundImageRef.current = null;\n    \n    // Also clear the display canvas and reset generated content flag\n    if (displayCanvasRef.current) {\n      const displayCtx = displayCanvasRef.current.getContext('2d');\n      displayCtx.clearRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n      displayCtx.fillStyle = '#FFFFFF';\n      displayCtx.fillRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n      setHasGeneratedContent(false);\n    }\n    \n    // Save empty canvas state\n    saveCanvasState();\n  };\n\n  const handleGeneration = useCallback(async () => {\n    console.log('handleGeneration called');\n    \n    const now = Date.now();\n    if (now - lastRequestTime < MIN_REQUEST_INTERVAL) {\n      console.log(\"Request throttled - too soon after last request\");\n      return;\n    }\n    \n    setLastRequestTime(now);\n    if (!canvasRef.current) return;\n    \n    console.log('Starting generation process');\n    setIsLoading(true);\n    \n    try {\n      const canvas = canvasRef.current;\n      const tempCanvas = document.createElement('canvas');\n      tempCanvas.width = canvas.width;\n      tempCanvas.height = canvas.height;\n      const tempCtx = tempCanvas.getContext('2d');\n      \n      tempCtx.fillStyle = '#FFFFFF';\n      tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n      tempCtx.drawImage(canvas, 0, 0);\n      \n      const drawingData = tempCanvas.toDataURL(\"image/png\").split(\",\")[1];\n      \n      const requestPayload = {\n        prompt: getPromptForStyle(styleMode),\n        drawingData,\n        customApiKey\n      };\n      \n      console.log('Making API request with style:', styleMode);\n      \n      const response = await fetch(\"/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestPayload),\n      });\n      \n      console.log('API response received, status:', response.status);\n      \n      const data = await response.json();\n      \n      if (data.success && data.imageData) {\n        console.log('Image generated successfully');\n        const imageUrl = `data:image/png;base64,${data.imageData}`;\n        \n        // Draw the generated image to the display canvas\n        const displayCanvas = displayCanvasRef.current;\n        if (!displayCanvas) {\n          console.error('Display canvas ref is null');\n          return;\n        }\n        \n        const displayCtx = displayCanvas.getContext('2d');\n        \n        // Clear the display canvas first\n        displayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n        displayCtx.fillStyle = '#FFFFFF';\n        displayCtx.fillRect(0, 0, displayCanvas.width, displayCanvas.height);\n        \n        // Create and load the new image\n        const img = new Image();\n        \n        // Set up the onload handler before setting the src\n        img.onload = () => {\n          console.log('Generated image loaded, drawing to display canvas');\n          displayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n          displayCtx.drawImage(img, 0, 0, displayCanvas.width, displayCanvas.height);\n          console.log('Image drawn to display canvas');\n          \n          // Update our state to indicate we have generated content\n          setHasGeneratedContent(true);\n\n          // Add to history\n          setImageHistory(prev => [...prev, {\n            imageUrl,\n            timestamp: Date.now(),\n            drawingData: canvas.toDataURL(),\n            styleMode,\n            dimensions: currentDimension\n          }]);\n        };\n        \n        // Set the src to trigger loading\n        img.src = imageUrl;\n      } else {\n        console.error(\"Failed to generate image:\", data.error);\n        \n        // When generation fails, ensure display canvas is cleared\n        if (displayCanvasRef.current) {\n          const displayCtx = displayCanvasRef.current.getContext('2d');\n          displayCtx.clearRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n          displayCtx.fillStyle = '#FFFFFF';\n          displayCtx.fillRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n        }\n        \n        // Make sure we mark that we don't have generated content\n        setHasGeneratedContent(false);\n        \n        if (data.error && (\n          data.error.includes(\"Resource has been exhausted\") || \n          data.error.includes(\"quota\") ||\n          response.status === 429 ||\n          response.status === 500\n        )) {\n          setErrorMessage(data.error);\n          setShowErrorModal(true);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      setErrorMessage(error.message || \"An unexpected error occurred.\");\n      setShowErrorModal(true);\n      \n      // When generation errors, ensure display canvas is cleared\n      if (displayCanvasRef.current) {\n        const displayCtx = displayCanvasRef.current.getContext('2d');\n        displayCtx.clearRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n        displayCtx.fillStyle = '#FFFFFF';\n        displayCtx.fillRect(0, 0, displayCanvasRef.current.width, displayCanvasRef.current.height);\n      }\n      \n      // Make sure we mark that we don't have generated content\n      setHasGeneratedContent(false);\n    } finally {\n      setIsLoading(false);\n      console.log('Generation process completed');\n    }\n  }, [\n    lastRequestTime, \n    styleMode, \n    customApiKey,\n    currentDimension\n  ]);\n\n  // Close the error modal\n  const closeErrorModal = () => {\n    setShowErrorModal(false);\n  };\n\n  // Handle the custom API key submission\n  const handleApiKeySubmit = (e) => {\n    e.preventDefault();\n    setShowErrorModal(false);\n    // Will use the customApiKey state in the next API call\n  };\n\n  // Add this function to handle undo\n  const handleUndo = () => {\n    if (undoStack.length > 0) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const previousState = undoStack[undoStack.length - 2]; // Get second to last state\n      \n      if (previousState) {\n        const img = new Image();\n        img.onload = () => {\n          ctx.fillStyle = '#FFFFFF';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0);\n        };\n        img.src = previousState;\n      } else {\n        // If no previous state, clear to white\n        ctx.fillStyle = '#FFFFFF';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n      \n      setUndoStack(prev => prev.slice(0, -1));\n    }\n  };\n\n  // Add this function to save canvas state\n  const saveCanvasState = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const dataURL = canvas.toDataURL();\n    setUndoStack(prev => [...prev, dataURL]);\n  };\n\n  // Add this function to handle text input\n  const handleTextInput = (e) => {\n    if (e.key === 'Enter') {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.font = '24px Arial';\n      ctx.fillStyle = '#000000';\n      ctx.fillText(textInput, textPosition.x, textPosition.y);\n      setTextInput('');\n      setIsTyping(false);\n      saveCanvasState();\n    }\n  };\n\n  // Modify the canvas click handler to handle text placement\n  const handleCanvasClick = (e) => {\n    if (currentTool === 'text') {\n      const { x, y } = getCoordinates(e, canvasRef.current);\n      setTextPosition({ x, y });\n      setIsTyping(true);\n      if (textInputRef.current) {\n        textInputRef.current.focus();\n      }\n    }\n  };\n\n  // Handle pen click for bezier curve tool\n  const handlePenClick = (e) => {\n    if (currentTool !== 'pen') return;\n    \n    // Note: Actual point creation is now handled in the Canvas component\n    // This function is primarily used as a callback to inform the CanvasContainer\n    // that a pen action happened\n    \n    console.log('handlePenClick called in CanvasContainer');\n    \n    // Set isDrawing flag to true when using pen tool\n    // This ensures handleStopDrawing knows we're in drawing mode with the pen\n    setIsDrawing(true);\n    \n    // Save canvas state when adding new points\n    saveCanvasState();\n  };\n\n  // Add this new function near your other utility functions\n  const handleSaveImage = () => {\n    // For the generated image\n    if (displayCanvasRef.current) {\n      const link = document.createElement('a');\n      link.download = 'chrome-study.png';\n      link.href = displayCanvasRef.current.toDataURL('image/png');\n      link.click();\n    }\n  };\n\n  // Add this function to handle regeneration\n  const handleRegenerate = async () => {\n    if (canvasRef.current) {\n      // Temporarily reset hasGeneratedContent so placeholder shows during loading\n      setHasGeneratedContent(false);\n      await handleGeneration();\n    }\n  };\n\n  // Add useEffect to watch for styleMode changes and regenerate\n  useEffect(() => {\n    // Only trigger if we have something drawn (check if canvas is not empty)\n    const checkCanvasAndGenerate = async () => {\n      if (!canvasRef.current) return;\n      \n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      \n      // Check if canvas has any non-white pixels\n      const hasDrawing = Array.from(imageData.data).some((pixel, index) => {\n        // Check only RGB values (skip alpha)\n        return index % 4 !== 3 && pixel !== 255;\n      });\n\n      if (hasDrawing) {\n        await handleGeneration();\n      }\n    };\n\n    // Skip on first render\n    if (styleMode) {\n      checkCanvasAndGenerate();\n    }\n  }, [styleMode, handleGeneration]); // Added handleGeneration to dependency array\n\n  // Cleanup function - keep this to prevent memory leaks\n  useEffect(() => {\n    return () => {\n      if (strokeTimeoutRef.current) {\n        clearTimeout(strokeTimeoutRef.current);\n        strokeTimeoutRef.current = null;\n      }\n    };\n  }, []);\n\n  // Handle dimension change\n  const handleDimensionChange = (newDimension) => {\n    console.log('Changing dimensions to:', newDimension);\n    \n    // Clear both canvases\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = newDimension.width;\n      canvas.height = newDimension.height;\n      initializeCanvas(canvas);\n    }\n    \n    if (displayCanvasRef.current) {\n      const displayCanvas = displayCanvasRef.current;\n      displayCanvas.width = newDimension.width;\n      displayCanvas.height = newDimension.height;\n      const ctx = displayCanvas.getContext('2d');\n      ctx.fillStyle = '#FFFFFF';\n      ctx.fillRect(0, 0, displayCanvas.width, displayCanvas.height);\n    }\n    \n    // Reset generation state\n    setHasGeneratedContent(false);\n    setGeneratedImage(null);\n    backgroundImageRef.current = null;\n    \n    // Update dimension state AFTER canvas dimensions are updated\n    setCurrentDimension(newDimension);\n  };\n\n  // Add new function to handle selecting a historical image\n  const handleSelectHistoricalImage = (historyItem) => {\n    // Set the current dimension to match the historical image\n    if (historyItem.dimensions) {\n      setCurrentDimension(historyItem.dimensions);\n    }\n\n    // Draw the original drawing to the canvas\n    const drawingImg = new Image();\n    drawingImg.onload = () => {\n      const canvas = canvasRef.current;\n      if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(drawingImg, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    drawingImg.src = historyItem.drawingData;\n\n    // Draw the generated image to the display canvas\n    const generatedImg = new Image();\n    generatedImg.onload = () => {\n      const displayCanvas = displayCanvasRef.current;\n      if (displayCanvas) {\n        const ctx = displayCanvas.getContext('2d');\n        ctx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n        ctx.drawImage(generatedImg, 0, 0, displayCanvas.width, displayCanvas.height);\n        setHasGeneratedContent(true);\n      }\n    };\n    generatedImg.src = historyItem.imageUrl;\n\n    // Close the history modal\n    setIsHistoryModalOpen(false);\n  };\n\n  // Add new function to handle image refinement\n  const handleImageRefinement = async (refinementPrompt) => {\n    if (!displayCanvasRef.current || !hasGeneratedContent) return;\n    \n    console.log('Starting image refinement with prompt:', refinementPrompt);\n    setIsLoading(true);\n    \n    try {\n      // Get the current image data\n      const displayCanvas = displayCanvasRef.current;\n      const imageData = displayCanvas.toDataURL(\"image/png\").split(\",\")[1];\n      \n      const requestPayload = {\n        prompt: refinementPrompt,\n        imageData,\n        customApiKey\n      };\n      \n      console.log('Making refinement API request');\n      \n      const response = await fetch(\"/api/refine\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestPayload),\n      });\n      \n      console.log('Refinement API response received, status:', response.status);\n      \n      const data = await response.json();\n      \n      if (data.success && data.imageData) {\n        console.log('Image refined successfully');\n        const imageUrl = `data:image/png;base64,${data.imageData}`;\n        \n        // Draw the refined image to the display canvas\n        const displayCtx = displayCanvas.getContext('2d');\n        const img = new Image();\n        \n        img.onload = () => {\n          console.log('Refined image loaded, drawing to display canvas');\n          displayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n          displayCtx.drawImage(img, 0, 0, displayCanvas.width, displayCanvas.height);\n          \n          // Add to history\n          setImageHistory(prev => [...prev, {\n            imageUrl,\n            timestamp: Date.now(),\n            drawingData: canvasRef.current.toDataURL(),\n            styleMode,\n            dimensions: currentDimension\n          }]);\n        };\n        \n        img.src = imageUrl;\n      } else {\n        console.error(\"Failed to refine image:\", data.error);\n        setErrorMessage(data.error || \"Failed to refine image. Please try again.\");\n        setShowErrorModal(true);\n      }\n    } catch (error) {\n      console.error('Error during refinement:', error);\n      setErrorMessage(\"An error occurred during refinement. Please try again.\");\n      setShowErrorModal(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Add onImageUpload function\n  const onImageUpload = (imageDataUrl) => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    img.onload = () => {\n      // Clear the canvas\n      ctx.fillStyle = '#FFFFFF';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculate dimensions to maintain aspect ratio and fit within canvas\n      const scale = Math.min(\n        canvas.width / img.width,\n        canvas.height / img.height\n      );\n      const x = (canvas.width - img.width * scale) / 2;\n      const y = (canvas.height - img.height * scale) / 2;\n\n      // Draw the image centered and scaled\n      ctx.drawImage(\n        img,\n        x, y,\n        img.width * scale,\n        img.height * scale\n      );\n\n      // Save canvas state after uploading image\n      saveCanvasState();\n      setHasGeneratedContent(true);\n    };\n\n    img.src = imageDataUrl;\n  };\n\n  // Add stroke width handler\n  const handleStrokeWidth = (width) => {\n    setPenWidth(width);\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-start bg-gray-50 p-2 md:p-4\">\n      <div className=\"w-full max-w-[1800px] mx-auto pb-32\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <div className=\"flex-shrink-0\">\n              <Header />\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <DimensionSelector \n                currentDimension={currentDimension}\n                onDimensionChange={handleDimensionChange}\n              />\n              <span className=\"text-sm text-gray-600 bg-gray-200 px-4 py-2 rounded-full whitespace-nowrap\">\n                Using Gemini 2.0 Native Image Generation\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 items-stretch\">\n            <div className=\"flex flex-col items-center gap-4\">\n              <div className=\"flex justify-center w-full h-full\">\n                <Canvas \n                  canvasRef={canvasRef}\n                  currentTool={currentTool}\n                  isDrawing={isDrawing}\n                  startDrawing={startDrawing}\n                  draw={draw}\n                  stopDrawing={stopDrawing}\n                  handleCanvasClick={handleCanvasClick}\n                  handlePenClick={handlePenClick}\n                  handleGeneration={handleGeneration}\n                  tempPoints={tempPoints}\n                  setTempPoints={setTempPoints}\n                  handleUndo={handleUndo}\n                  clearCanvas={clearCanvas}\n                  setCurrentTool={setCurrentTool}\n                  currentDimension={currentDimension}\n                  currentColor={penColor}\n                  currentWidth={penWidth}\n                  onImageUpload={onImageUpload}\n                  isGenerating={isLoading}\n                />\n              </div>\n              <div className=\"flex justify-center w-full h-full\">\n                <div \n                  className=\"border border-gray-300 bg-white rounded-xl shadow-soft\"\n                  style={{\n                    width: '100%',\n                    aspectRatio: `${currentDimension.width} / ${currentDimension.height}`,\n                    maxWidth: '100%',\n                    maxHeight: '800px',\n                    position: 'relative',\n                    overflow: 'hidden'\n                  }}\n                >\n                  <div className=\"absolute inset-0 flex items-start justify-start p-2\">\n                    <StyleSelector \n                      styleMode={styleMode}\n                      setStyleMode={setStyleMode}\n                      handleGenerate={handleGeneration}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col items-center\">\n              <div className=\"flex justify-center w-full h-full\">\n                <DisplayCanvas \n                  displayCanvasRef={displayCanvasRef}\n                  isLoading={isLoading}\n                  handleSaveImage={handleSaveImage}\n                  handleRegenerate={handleRegenerate}\n                  hasGeneratedContent={hasGeneratedContent}\n                  currentDimension={currentDimension}\n                  onOpenHistory={() => setIsHistoryModalOpen(true)}\n                  onRefineImage={handleImageRefinement}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ErrorModal \n        showErrorModal={showErrorModal}\n        closeErrorModal={closeErrorModal}\n        customApiKey={customApiKey}\n        setCustomApiKey={setCustomApiKey}\n        handleApiKeySubmit={handleApiKeySubmit}\n      />\n\n      <TextInput \n        isTyping={isTyping}\n        textInputRef={textInputRef}\n        textInput={textInput}\n        setTextInput={setTextInput}\n        handleTextInput={handleTextInput}\n        textPosition={textPosition}\n      />\n\n      <HistoryModal\n        isOpen={isHistoryModalOpen}\n        onClose={() => setIsHistoryModalOpen(false)}\n        history={imageHistory}\n        onSelectImage={handleSelectHistoricalImage}\n        currentDimension={currentDimension}\n      />\n    </div>\n  );\n};\n\nexport default CanvasContainer; "],"names":[],"mappings":"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","debugId":null}}]
}