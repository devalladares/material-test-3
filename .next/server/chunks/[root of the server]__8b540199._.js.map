{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/pages/api/generate.js"],"sourcesContent":["/**\n * API endpoint for generating material thumbnails and transformations\n * This is a mock implementation that simulates generating images from prompts.\n * In a real application, this would connect to an AI image generation service.\n */\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ success: false, error: 'Method not allowed' });\n  }\n\n  try {\n    const { prompt } = req.body;\n    \n    if (!prompt) {\n      return res.status(400).json({ \n        success: false, \n        error: 'Prompt is required' \n      });\n    }\n    \n    // Simulate processing time (1-2 seconds)\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1000));\n    \n    // This is where you'd call your image generation model\n    // For mock purposes, we'll return a base64 image of a colored sphere\n    \n    // Generate a random color based on the prompt text\n    const hash = hashString(prompt);\n    const r = (hash & 0xFF) % 256;\n    const g = ((hash >> 8) & 0xFF) % 256;\n    const b = ((hash >> 16) & 0xFF) % 256;\n    \n    // Generate a simple SVG\n    const svg = generateSphereSVG(r, g, b);\n    \n    // Convert SVG to base64\n    const base64 = Buffer.from(svg).toString('base64');\n    \n    return res.status(200).json({\n      success: true,\n      imageData: base64\n    });\n  } catch (error) {\n    console.error('Error generating image:', error);\n    return res.status(500).json({ \n      success: false, \n      error: 'Error generating image' \n    });\n  }\n}\n\n/**\n * Generate a simple hash from a string\n */\nfunction hashString(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = ((hash << 5) - hash) + str.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n  return Math.abs(hash);\n}\n\n/**\n * Generate an SVG of a colored sphere with the given RGB values\n */\nfunction generateSphereSVG(r, g, b) {\n  const brightness = (r + g + b) / 3;\n  const isDark = brightness < 128;\n  const highlightColor = isDark ? 'rgba(255,255,255,0.6)' : 'rgba(255,255,255,0.8)';\n  \n  return `<svg width=\"512\" height=\"512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"512\" height=\"512\" fill=\"black\" />\n    <defs>\n      <radialGradient id=\"sphere\" cx=\"0.4\" cy=\"0.4\" r=\"0.6\">\n        <stop offset=\"0%\" stop-color=\"rgb(${r+50},${g+50},${b+50})\" />\n        <stop offset=\"70%\" stop-color=\"rgb(${r},${g},${b})\" />\n        <stop offset=\"100%\" stop-color=\"rgb(${Math.max(0,r-50)},${Math.max(0,g-50)},${Math.max(0,b-50)})\" />\n      </radialGradient>\n    </defs>\n    <circle cx=\"256\" cy=\"256\" r=\"180\" fill=\"url(#sphere)\" />\n    <ellipse cx=\"205\" cy=\"205\" rx=\"60\" ry=\"60\" fill=\"${highlightColor}\" opacity=\"0.5\" />\n  </svg>`;\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACc,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAqB;IAC5E;IAEA,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;QAE3B,IAAI,CAAC,QAAQ;YACX,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,SAAS;gBACT,OAAO;YACT;QACF;QAEA,yCAAyC;QACzC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,KAAK,MAAM,KAAK;QAExE,uDAAuD;QACvD,qEAAqE;QAErE,mDAAmD;QACnD,MAAM,OAAO,WAAW;QACxB,MAAM,IAAI,CAAC,OAAO,IAAI,IAAI;QAC1B,MAAM,IAAI,CAAC,AAAC,QAAQ,IAAK,IAAI,IAAI;QACjC,MAAM,IAAI,CAAC,AAAC,QAAQ,KAAM,IAAI,IAAI;QAElC,wBAAwB;QACxB,MAAM,MAAM,kBAAkB,GAAG,GAAG;QAEpC,wBAAwB;QACxB,MAAM,SAAS,OAAO,IAAI,CAAC,KAAK,QAAQ,CAAC;QAEzC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,SAAS;YACT,WAAW;QACb;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEA;;CAEC,GACD,SAAS,WAAW,GAAG;IACrB,IAAI,OAAO;IACX,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,OAAO,AAAC,CAAC,QAAQ,CAAC,IAAI,OAAQ,IAAI,UAAU,CAAC;QAC7C,QAAQ,GAAG,2BAA2B;IACxC;IACA,OAAO,KAAK,GAAG,CAAC;AAClB;AAEA;;CAEC,GACD,SAAS,kBAAkB,CAAC,EAAE,CAAC,EAAE,CAAC;IAChC,MAAM,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI;IACjC,MAAM,SAAS,aAAa;IAC5B,MAAM,iBAAiB,SAAS,0BAA0B;IAE1D,OAAO,CAAC;;;;0CAIgC,EAAE,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG;2CACtB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;4CACb,EAAE,KAAK,GAAG,CAAC,GAAE,IAAE,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,GAAE,IAAE,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,GAAE,IAAE,IAAI;;;;qDAIlD,EAAE,eAAe;QAC9D,CAAC;AACT","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,mHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,mHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}