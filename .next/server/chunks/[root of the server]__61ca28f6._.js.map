{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/pages/api/enhance-material.js"],"sourcesContent":["import { GoogleGenerativeAI } from '@google/generative-ai';\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  try {\n    // Extract material description from request body\n    const { materialDescription } = req.body;\n    \n    if (!materialDescription) {\n      return res.status(200).json({ \n        name: 'Unknown Material',\n        details: 'Add standard material properties with accurate surface texturing.' \n      });\n    }\n    \n    // Initialize the Google Generative AI with API key\n    const apiKey = process.env.GEMINI_API_KEY;\n    if (!apiKey) {\n      console.error(\"Missing GEMINI_API_KEY\");\n      // Return a 200 with fallback data instead of error\n      return res.status(200).json({ \n        name: materialDescription,\n        details: `Emphasize the characteristic properties of ${materialDescription.toLowerCase()} with accurate surface texturing.` \n      });\n    }\n    \n    try {\n      const genAI = new GoogleGenerativeAI(apiKey);\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-pro\",\n        generationConfig: {\n          temperature: 0.7,\n          topP: 0.8,\n          topK: 40\n        }\n      });\n\n      // Create prompt for material enhancement\n      const prompt = `Given the material description \"${materialDescription}\", provide:\n      1. A concise material name (2-3 words maximum, keep original name if simple enough)\n      2. Please provide contextual, specific material properties to enhance the existing prompt:\n      \"Transform this sketch into a [material] material. Render it in a high-end 3D visualization style with professional studio lighting against a pure black background. Make it look like an elegant Cinema 4D and Octane rendering with detailed material properties and characteristics. The final result should be a premium product visualization with perfect studio lighting, crisp shadows, and high-end material definition.\"\n\n      Format response STRICTLY as JSON:\n      {\n        \"name\": \"Material Name\",\n        \"details\": \"Only additional material properties,\"\n      }\n\n      Requirements:\n      - Keep name simple if input is already concise (e.g., \"rusted iron\" stays as \"Rusted Iron\")\n      - Simplify complex descriptions (e.g., \"glass beads made of fire\" becomes \"Molten Glass\")\n      - Details should focus on physical properties, visual characteristics, and rendering techniques. Feel free to be creative! :)\n      - Do not repeat what's already in the base prompt (black background, lighting, etc)\n      - Keep details concise and technical`;\n\n      // Generate content with the model\n      const result = await model.generateContent(prompt);\n      const response = result.response;\n      const responseText = response.text();\n\n      try {\n        // Try to parse the response as JSON\n        const jsonResponse = JSON.parse(responseText);\n        \n        // Validate the response format\n        if (!jsonResponse.name || !jsonResponse.details) {\n          throw new Error('Invalid response format');\n        }\n\n        return res.status(200).json(jsonResponse);\n      } catch (error) {\n        console.error('Error parsing AI response:', error);\n        \n        // Provide a meaningful fallback that includes some basic enhancement\n        const capitalizedName = materialDescription\n          .split(' ')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n          .join(' ');\n        \n        return res.status(200).json({\n          name: capitalizedName,\n          details: `Emphasize the characteristic properties of ${materialDescription.toLowerCase()} with accurate surface texturing and physical behavior.`\n        });\n      }\n    } catch (aiError) {\n      console.error('AI generation error:', aiError);\n      // Return a 200 with fallback data instead of error\n      const capitalizedName = materialDescription\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n      \n      return res.status(200).json({\n        name: capitalizedName,\n        details: `Emphasize the characteristic properties of ${materialDescription.toLowerCase()} with accurate surface texturing.`\n      });\n    }\n  } catch (error) {\n    console.error('General error in enhance-material:', error);\n    // Return a 200 with basic fallback instead of 500\n    return res.status(200).json({\n      name: req.body?.materialDescription || 'Unknown Material',\n      details: 'Add standard material properties with accurate surface texturing.'\n    });\n  }\n} "],"names":[],"mappings":";;;AAAA;;;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IAC5D;IAEA,IAAI;QACF,iDAAiD;QACjD,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAI,IAAI;QAExC,IAAI,CAAC,qBAAqB;YACxB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,MAAM;gBACN,SAAS;YACX;QACF;QAEA,mDAAmD;QACnD,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;QACzC,IAAI,CAAC,QAAQ;YACX,QAAQ,KAAK,CAAC;YACd,mDAAmD;YACnD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,MAAM;gBACN,SAAS,CAAC,2CAA2C,EAAE,oBAAoB,WAAW,GAAG,iCAAiC,CAAC;YAC7H;QACF;QAEA,IAAI;YACF,MAAM,QAAQ,IAAI,wJAAA,CAAA,qBAAkB,CAAC;YACrC,MAAM,QAAQ,MAAM,kBAAkB,CAAC;gBACrC,OAAO;gBACP,kBAAkB;oBAChB,aAAa;oBACb,MAAM;oBACN,MAAM;gBACR;YACF;YAEA,yCAAyC;YACzC,MAAM,SAAS,CAAC,gCAAgC,EAAE,oBAAoB;;;;;;;;;;;;;;;;0CAgBlC,CAAC;YAErC,kCAAkC;YAClC,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;YAC3C,MAAM,WAAW,OAAO,QAAQ;YAChC,MAAM,eAAe,SAAS,IAAI;YAElC,IAAI;gBACF,oCAAoC;gBACpC,MAAM,eAAe,KAAK,KAAK,CAAC;gBAEhC,+BAA+B;gBAC/B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,OAAO,EAAE;oBAC/C,MAAM,IAAI,MAAM;gBAClB;gBAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC9B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;gBAE5C,qEAAqE;gBACrE,MAAM,kBAAkB,oBACrB,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW,IACpE,IAAI,CAAC;gBAER,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAC1B,MAAM;oBACN,SAAS,CAAC,2CAA2C,EAAE,oBAAoB,WAAW,GAAG,uDAAuD,CAAC;gBACnJ;YACF;QACF,EAAE,OAAO,SAAS;YAChB,QAAQ,KAAK,CAAC,wBAAwB;YACtC,mDAAmD;YACnD,MAAM,kBAAkB,oBACrB,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW,IACpE,IAAI,CAAC;YAER,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,MAAM;gBACN,SAAS,CAAC,2CAA2C,EAAE,oBAAoB,WAAW,GAAG,iCAAiC,CAAC;YAC7H;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,kDAAkD;QAClD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,MAAM,IAAI,IAAI,EAAE,uBAAuB;YACvC,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/devvalladares/Documents/GitHub/material-test-3/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,8HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,8HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}